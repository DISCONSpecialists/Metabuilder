/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file METAView_Function_Retrieval.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace MetaBuilder.BusinessLogic
{
	///<summary>
	/// An object representation of the 'METAView_Function_Retrieval' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("METAView_Function_RetrievalBase")]
	public abstract partial class METAView_Function_RetrievalBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// WorkspaceName : 
		/// </summary>
		private System.String		  _workspaceName = string.Empty;
		
		/// <summary>
		/// WorkspaceTypeId : 
		/// </summary>
		private System.Int32?		  _workspaceTypeId = null;
		
		/// <summary>
		/// VCStatusID : 
		/// </summary>
		private System.Int32		  _vCStatusID = (int)0;
		
		/// <summary>
		/// pkid : 
		/// </summary>
		private System.Int32		  _pkid = (int)0;
		
		/// <summary>
		/// Machine : 
		/// </summary>
		private System.String		  _machine = string.Empty;
		
		/// <summary>
		/// VCMachineID : 
		/// </summary>
		private System.String		  _vCMachineID = null;
		
		/// <summary>
		/// Name : 
		/// </summary>
		private System.String		  _name = null;
		
		/// <summary>
		/// ContextualIndicator : 
		/// </summary>
		private System.String		  _contextualIndicator = null;
		
		/// <summary>
		/// FunctionCriticality : 
		/// </summary>
		private System.String		  _functionCriticality = null;
		
		/// <summary>
		/// ManagementAbility : 
		/// </summary>
		private System.String		  _managementAbility = null;
		
		/// <summary>
		/// InfoAvailability : 
		/// </summary>
		private System.String		  _infoAvailability = null;
		
		/// <summary>
		/// LegalAspects : 
		/// </summary>
		private System.String		  _legalAspects = null;
		
		/// <summary>
		/// Technology : 
		/// </summary>
		private System.String		  _technology = null;
		
		/// <summary>
		/// Budget : 
		/// </summary>
		private System.String		  _budget = null;
		
		/// <summary>
		/// Energy : 
		/// </summary>
		private System.String		  _energy = null;
		
		/// <summary>
		/// RawMaterial : 
		/// </summary>
		private System.String		  _rawMaterial = null;
		
		/// <summary>
		/// SkillAvailability : 
		/// </summary>
		private System.String		  _skillAvailability = null;
		
		/// <summary>
		/// Efficiency : 
		/// </summary>
		private System.String		  _efficiency = null;
		
		/// <summary>
		/// Effectiveness : 
		/// </summary>
		private System.String		  _effectiveness = null;
		
		/// <summary>
		/// Manpower : 
		/// </summary>
		private System.String		  _manpower = null;
		
		/// <summary>
		/// CustomField1 : 
		/// </summary>
		private System.String		  _customField1 = null;
		
		/// <summary>
		/// CustomField2 : 
		/// </summary>
		private System.String		  _customField2 = null;
		
		/// <summary>
		/// CustomField3 : 
		/// </summary>
		private System.String		  _customField3 = null;
		
		/// <summary>
		/// EnvironmentInd : 
		/// </summary>
		private System.String		  _environmentInd = null;
		
		/// <summary>
		/// GovernanceMech : 
		/// </summary>
		private System.String		  _governanceMech = null;
		
		/// <summary>
		/// CapitalAvailability : 
		/// </summary>
		private System.String		  _capitalAvailability = null;
		
		/// <summary>
		/// Competencies : 
		/// </summary>
		private System.String		  _competencies = null;
		
		/// <summary>
		/// Ethics : 
		/// </summary>
		private System.String		  _ethics = null;
		
		/// <summary>
		/// Facilities : 
		/// </summary>
		private System.String		  _facilities = null;
		
		/// <summary>
		/// ServicesUSage : 
		/// </summary>
		private System.String		  _servicesUSage = null;
		
		/// <summary>
		/// Equipment : 
		/// </summary>
		private System.String		  _equipment = null;
		
		/// <summary>
		/// TimeIndicator : 
		/// </summary>
		private System.String		  _timeIndicator = null;
		
		/// <summary>
		/// GapType : 
		/// </summary>
		private System.String		  _gapType = null;
		
		/// <summary>
		/// Description : 
		/// </summary>
		private System.String		  _description = null;
		
		/// <summary>
		/// Abbreviation : 
		/// </summary>
		private System.String		  _abbreviation = null;
		
		/// <summary>
		/// IsBusinessExternal : 
		/// </summary>
		private System.String		  _isBusinessExternal = null;
		
		/// <summary>
		/// StandardisationStatus : 
		/// </summary>
		private System.String		  _standardisationStatus = null;
		
		/// <summary>
		/// StandardisationStatusDate : 
		/// </summary>
		private System.String		  _standardisationStatusDate = null;
		
		/// <summary>
		/// DataSourceID : 
		/// </summary>
		private System.String		  _dataSourceID = null;
		
		/// <summary>
		/// DataSourceName : 
		/// </summary>
		private System.String		  _dataSourceName = null;
		
		/// <summary>
		/// GeneralRemarks : 
		/// </summary>
		private System.String		  _generalRemarks = null;
		
		/// <summary>
		/// ArchitectureStatus : 
		/// </summary>
		private System.String		  _architectureStatus = null;
		
		/// <summary>
		/// ArchitectureStatusDate : 
		/// </summary>
		private System.String		  _architectureStatusDate = null;
		
		/// <summary>
		/// DesignRationale : 
		/// </summary>
		private System.String		  _designRationale = null;
		
		/// <summary>
		/// FunctionCategory : 
		/// </summary>
		private System.String		  _functionCategory = null;
		
		/// <summary>
		/// OverallEfficiencyRating : 
		/// </summary>
		private System.String		  _overallEfficiencyRating = null;
		
		/// <summary>
		/// OverallEffectivenessRating : 
		/// </summary>
		private System.String		  _overallEffectivenessRating = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="METAView_Function_RetrievalBase"/> instance.
		///</summary>
		public METAView_Function_RetrievalBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="METAView_Function_RetrievalBase"/> instance.
		///</summary>
		///<param name="_workspaceName"></param>
		///<param name="_workspaceTypeId"></param>
		///<param name="_vCStatusID"></param>
		///<param name="_pkid"></param>
		///<param name="_machine"></param>
		///<param name="_vCMachineID"></param>
		///<param name="_name"></param>
		///<param name="_contextualIndicator"></param>
		///<param name="_functionCriticality"></param>
		///<param name="_managementAbility"></param>
		///<param name="_infoAvailability"></param>
		///<param name="_legalAspects"></param>
		///<param name="_technology"></param>
		///<param name="_budget"></param>
		///<param name="_energy"></param>
		///<param name="_rawMaterial"></param>
		///<param name="_skillAvailability"></param>
		///<param name="_efficiency"></param>
		///<param name="_effectiveness"></param>
		///<param name="_manpower"></param>
		///<param name="_customField1"></param>
		///<param name="_customField2"></param>
		///<param name="_customField3"></param>
		///<param name="_environmentInd"></param>
		///<param name="_governanceMech"></param>
		///<param name="_capitalAvailability"></param>
		///<param name="_competencies"></param>
		///<param name="_ethics"></param>
		///<param name="_facilities"></param>
		///<param name="_servicesUSage"></param>
		///<param name="_equipment"></param>
		///<param name="_timeIndicator"></param>
		///<param name="_gapType"></param>
		///<param name="_description"></param>
		///<param name="_abbreviation"></param>
		///<param name="_isBusinessExternal"></param>
		///<param name="_standardisationStatus"></param>
		///<param name="_standardisationStatusDate"></param>
		///<param name="_dataSourceID"></param>
		///<param name="_dataSourceName"></param>
		///<param name="_generalRemarks"></param>
		///<param name="_architectureStatus"></param>
		///<param name="_architectureStatusDate"></param>
		///<param name="_designRationale"></param>
		///<param name="_functionCategory"></param>
		///<param name="_overallEfficiencyRating"></param>
		///<param name="_overallEffectivenessRating"></param>
		public METAView_Function_RetrievalBase(System.String _workspaceName, System.Int32? _workspaceTypeId, System.Int32 _vCStatusID, System.Int32 _pkid, System.String _machine, System.String _vCMachineID, System.String _name, System.String _contextualIndicator, System.String _functionCriticality, System.String _managementAbility, System.String _infoAvailability, System.String _legalAspects, System.String _technology, System.String _budget, System.String _energy, System.String _rawMaterial, System.String _skillAvailability, System.String _efficiency, System.String _effectiveness, System.String _manpower, System.String _customField1, System.String _customField2, System.String _customField3, System.String _environmentInd, System.String _governanceMech, System.String _capitalAvailability, System.String _competencies, System.String _ethics, System.String _facilities, System.String _servicesUSage, System.String _equipment, System.String _timeIndicator, System.String _gapType, System.String _description, System.String _abbreviation, System.String _isBusinessExternal, System.String _standardisationStatus, System.String _standardisationStatusDate, System.String _dataSourceID, System.String _dataSourceName, System.String _generalRemarks, System.String _architectureStatus, System.String _architectureStatusDate, System.String _designRationale, System.String _functionCategory, System.String _overallEfficiencyRating, System.String _overallEffectivenessRating)
		{
			this._workspaceName = _workspaceName;
			this._workspaceTypeId = _workspaceTypeId;
			this._vCStatusID = _vCStatusID;
			this._pkid = _pkid;
			this._machine = _machine;
			this._vCMachineID = _vCMachineID;
			this._name = _name;
			this._contextualIndicator = _contextualIndicator;
			this._functionCriticality = _functionCriticality;
			this._managementAbility = _managementAbility;
			this._infoAvailability = _infoAvailability;
			this._legalAspects = _legalAspects;
			this._technology = _technology;
			this._budget = _budget;
			this._energy = _energy;
			this._rawMaterial = _rawMaterial;
			this._skillAvailability = _skillAvailability;
			this._efficiency = _efficiency;
			this._effectiveness = _effectiveness;
			this._manpower = _manpower;
			this._customField1 = _customField1;
			this._customField2 = _customField2;
			this._customField3 = _customField3;
			this._environmentInd = _environmentInd;
			this._governanceMech = _governanceMech;
			this._capitalAvailability = _capitalAvailability;
			this._competencies = _competencies;
			this._ethics = _ethics;
			this._facilities = _facilities;
			this._servicesUSage = _servicesUSage;
			this._equipment = _equipment;
			this._timeIndicator = _timeIndicator;
			this._gapType = _gapType;
			this._description = _description;
			this._abbreviation = _abbreviation;
			this._isBusinessExternal = _isBusinessExternal;
			this._standardisationStatus = _standardisationStatus;
			this._standardisationStatusDate = _standardisationStatusDate;
			this._dataSourceID = _dataSourceID;
			this._dataSourceName = _dataSourceName;
			this._generalRemarks = _generalRemarks;
			this._architectureStatus = _architectureStatus;
			this._architectureStatusDate = _architectureStatusDate;
			this._designRationale = _designRationale;
			this._functionCategory = _functionCategory;
			this._overallEfficiencyRating = _overallEfficiencyRating;
			this._overallEffectivenessRating = _overallEffectivenessRating;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="METAView_Function_Retrieval"/> instance.
		///</summary>
		///<param name="_workspaceName"></param>
		///<param name="_workspaceTypeId"></param>
		///<param name="_vCStatusID"></param>
		///<param name="_pkid"></param>
		///<param name="_machine"></param>
		///<param name="_vCMachineID"></param>
		///<param name="_name"></param>
		///<param name="_contextualIndicator"></param>
		///<param name="_functionCriticality"></param>
		///<param name="_managementAbility"></param>
		///<param name="_infoAvailability"></param>
		///<param name="_legalAspects"></param>
		///<param name="_technology"></param>
		///<param name="_budget"></param>
		///<param name="_energy"></param>
		///<param name="_rawMaterial"></param>
		///<param name="_skillAvailability"></param>
		///<param name="_efficiency"></param>
		///<param name="_effectiveness"></param>
		///<param name="_manpower"></param>
		///<param name="_customField1"></param>
		///<param name="_customField2"></param>
		///<param name="_customField3"></param>
		///<param name="_environmentInd"></param>
		///<param name="_governanceMech"></param>
		///<param name="_capitalAvailability"></param>
		///<param name="_competencies"></param>
		///<param name="_ethics"></param>
		///<param name="_facilities"></param>
		///<param name="_servicesUSage"></param>
		///<param name="_equipment"></param>
		///<param name="_timeIndicator"></param>
		///<param name="_gapType"></param>
		///<param name="_description"></param>
		///<param name="_abbreviation"></param>
		///<param name="_isBusinessExternal"></param>
		///<param name="_standardisationStatus"></param>
		///<param name="_standardisationStatusDate"></param>
		///<param name="_dataSourceID"></param>
		///<param name="_dataSourceName"></param>
		///<param name="_generalRemarks"></param>
		///<param name="_architectureStatus"></param>
		///<param name="_architectureStatusDate"></param>
		///<param name="_designRationale"></param>
		///<param name="_functionCategory"></param>
		///<param name="_overallEfficiencyRating"></param>
		///<param name="_overallEffectivenessRating"></param>
		public static METAView_Function_Retrieval CreateMETAView_Function_Retrieval(System.String _workspaceName, System.Int32? _workspaceTypeId, System.Int32 _vCStatusID, System.Int32 _pkid, System.String _machine, System.String _vCMachineID, System.String _name, System.String _contextualIndicator, System.String _functionCriticality, System.String _managementAbility, System.String _infoAvailability, System.String _legalAspects, System.String _technology, System.String _budget, System.String _energy, System.String _rawMaterial, System.String _skillAvailability, System.String _efficiency, System.String _effectiveness, System.String _manpower, System.String _customField1, System.String _customField2, System.String _customField3, System.String _environmentInd, System.String _governanceMech, System.String _capitalAvailability, System.String _competencies, System.String _ethics, System.String _facilities, System.String _servicesUSage, System.String _equipment, System.String _timeIndicator, System.String _gapType, System.String _description, System.String _abbreviation, System.String _isBusinessExternal, System.String _standardisationStatus, System.String _standardisationStatusDate, System.String _dataSourceID, System.String _dataSourceName, System.String _generalRemarks, System.String _architectureStatus, System.String _architectureStatusDate, System.String _designRationale, System.String _functionCategory, System.String _overallEfficiencyRating, System.String _overallEffectivenessRating)
		{
			METAView_Function_Retrieval newMETAView_Function_Retrieval = new METAView_Function_Retrieval();
			newMETAView_Function_Retrieval.WorkspaceName = _workspaceName;
			newMETAView_Function_Retrieval.WorkspaceTypeId = _workspaceTypeId;
			newMETAView_Function_Retrieval.VCStatusID = _vCStatusID;
			newMETAView_Function_Retrieval.pkid = _pkid;
			newMETAView_Function_Retrieval.Machine = _machine;
			newMETAView_Function_Retrieval.VCMachineID = _vCMachineID;
			newMETAView_Function_Retrieval.Name = _name;
			newMETAView_Function_Retrieval.ContextualIndicator = _contextualIndicator;
			newMETAView_Function_Retrieval.FunctionCriticality = _functionCriticality;
			newMETAView_Function_Retrieval.ManagementAbility = _managementAbility;
			newMETAView_Function_Retrieval.InfoAvailability = _infoAvailability;
			newMETAView_Function_Retrieval.LegalAspects = _legalAspects;
			newMETAView_Function_Retrieval.Technology = _technology;
			newMETAView_Function_Retrieval.Budget = _budget;
			newMETAView_Function_Retrieval.Energy = _energy;
			newMETAView_Function_Retrieval.RawMaterial = _rawMaterial;
			newMETAView_Function_Retrieval.SkillAvailability = _skillAvailability;
			newMETAView_Function_Retrieval.Efficiency = _efficiency;
			newMETAView_Function_Retrieval.Effectiveness = _effectiveness;
			newMETAView_Function_Retrieval.Manpower = _manpower;
			newMETAView_Function_Retrieval.CustomField1 = _customField1;
			newMETAView_Function_Retrieval.CustomField2 = _customField2;
			newMETAView_Function_Retrieval.CustomField3 = _customField3;
			newMETAView_Function_Retrieval.EnvironmentInd = _environmentInd;
			newMETAView_Function_Retrieval.GovernanceMech = _governanceMech;
			newMETAView_Function_Retrieval.CapitalAvailability = _capitalAvailability;
			newMETAView_Function_Retrieval.Competencies = _competencies;
			newMETAView_Function_Retrieval.Ethics = _ethics;
			newMETAView_Function_Retrieval.Facilities = _facilities;
			newMETAView_Function_Retrieval.ServicesUSage = _servicesUSage;
			newMETAView_Function_Retrieval.Equipment = _equipment;
			newMETAView_Function_Retrieval.TimeIndicator = _timeIndicator;
			newMETAView_Function_Retrieval.GapType = _gapType;
			newMETAView_Function_Retrieval.Description = _description;
			newMETAView_Function_Retrieval.Abbreviation = _abbreviation;
			newMETAView_Function_Retrieval.IsBusinessExternal = _isBusinessExternal;
			newMETAView_Function_Retrieval.StandardisationStatus = _standardisationStatus;
			newMETAView_Function_Retrieval.StandardisationStatusDate = _standardisationStatusDate;
			newMETAView_Function_Retrieval.DataSourceID = _dataSourceID;
			newMETAView_Function_Retrieval.DataSourceName = _dataSourceName;
			newMETAView_Function_Retrieval.GeneralRemarks = _generalRemarks;
			newMETAView_Function_Retrieval.ArchitectureStatus = _architectureStatus;
			newMETAView_Function_Retrieval.ArchitectureStatusDate = _architectureStatusDate;
			newMETAView_Function_Retrieval.DesignRationale = _designRationale;
			newMETAView_Function_Retrieval.FunctionCategory = _functionCategory;
			newMETAView_Function_Retrieval.OverallEfficiencyRating = _overallEfficiencyRating;
			newMETAView_Function_Retrieval.OverallEffectivenessRating = _overallEffectivenessRating;
			return newMETAView_Function_Retrieval;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the WorkspaceName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WorkspaceName
		{
			get
			{
				return this._workspaceName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "WorkspaceName does not allow null values.");
				if (_workspaceName == value)
					return;
					
				this._workspaceName = value;
				this._isDirty = true;
				
				OnPropertyChanged("WorkspaceName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WorkspaceTypeId property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsWorkspaceTypeIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? WorkspaceTypeId
		{
			get
			{
				return this._workspaceTypeId; 
			}
			set
			{
				if (_workspaceTypeId == value && WorkspaceTypeId != null )
					return;
					
				this._workspaceTypeId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WorkspaceTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the VCStatusID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 VCStatusID
		{
			get
			{
				return this._vCStatusID; 
			}
			set
			{
				if (_vCStatusID == value)
					return;
					
				this._vCStatusID = value;
				this._isDirty = true;
				
				OnPropertyChanged("VCStatusID");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the pkid property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 pkid
		{
			get
			{
				return this._pkid; 
			}
			set
			{
				if (_pkid == value)
					return;
					
				this._pkid = value;
				this._isDirty = true;
				
				OnPropertyChanged("pkid");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Machine property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Machine
		{
			get
			{
				return this._machine; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "Machine does not allow null values.");
				if (_machine == value)
					return;
					
				this._machine = value;
				this._isDirty = true;
				
				OnPropertyChanged("Machine");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the VCMachineID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String VCMachineID
		{
			get
			{
				return this._vCMachineID; 
			}
			set
			{
				if (_vCMachineID == value)
					return;
					
				this._vCMachineID = value;
				this._isDirty = true;
				
				OnPropertyChanged("VCMachineID");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Name property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Name
		{
			get
			{
				return this._name; 
			}
			set
			{
				if (_name == value)
					return;
					
				this._name = value;
				this._isDirty = true;
				
				OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ContextualIndicator property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ContextualIndicator
		{
			get
			{
				return this._contextualIndicator; 
			}
			set
			{
				if (_contextualIndicator == value)
					return;
					
				this._contextualIndicator = value;
				this._isDirty = true;
				
				OnPropertyChanged("ContextualIndicator");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the FunctionCriticality property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String FunctionCriticality
		{
			get
			{
				return this._functionCriticality; 
			}
			set
			{
				if (_functionCriticality == value)
					return;
					
				this._functionCriticality = value;
				this._isDirty = true;
				
				OnPropertyChanged("FunctionCriticality");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ManagementAbility property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ManagementAbility
		{
			get
			{
				return this._managementAbility; 
			}
			set
			{
				if (_managementAbility == value)
					return;
					
				this._managementAbility = value;
				this._isDirty = true;
				
				OnPropertyChanged("ManagementAbility");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the InfoAvailability property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String InfoAvailability
		{
			get
			{
				return this._infoAvailability; 
			}
			set
			{
				if (_infoAvailability == value)
					return;
					
				this._infoAvailability = value;
				this._isDirty = true;
				
				OnPropertyChanged("InfoAvailability");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LegalAspects property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String LegalAspects
		{
			get
			{
				return this._legalAspects; 
			}
			set
			{
				if (_legalAspects == value)
					return;
					
				this._legalAspects = value;
				this._isDirty = true;
				
				OnPropertyChanged("LegalAspects");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Technology property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Technology
		{
			get
			{
				return this._technology; 
			}
			set
			{
				if (_technology == value)
					return;
					
				this._technology = value;
				this._isDirty = true;
				
				OnPropertyChanged("Technology");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Budget property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Budget
		{
			get
			{
				return this._budget; 
			}
			set
			{
				if (_budget == value)
					return;
					
				this._budget = value;
				this._isDirty = true;
				
				OnPropertyChanged("Budget");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Energy property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Energy
		{
			get
			{
				return this._energy; 
			}
			set
			{
				if (_energy == value)
					return;
					
				this._energy = value;
				this._isDirty = true;
				
				OnPropertyChanged("Energy");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the RawMaterial property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String RawMaterial
		{
			get
			{
				return this._rawMaterial; 
			}
			set
			{
				if (_rawMaterial == value)
					return;
					
				this._rawMaterial = value;
				this._isDirty = true;
				
				OnPropertyChanged("RawMaterial");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SkillAvailability property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String SkillAvailability
		{
			get
			{
				return this._skillAvailability; 
			}
			set
			{
				if (_skillAvailability == value)
					return;
					
				this._skillAvailability = value;
				this._isDirty = true;
				
				OnPropertyChanged("SkillAvailability");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Efficiency property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Efficiency
		{
			get
			{
				return this._efficiency; 
			}
			set
			{
				if (_efficiency == value)
					return;
					
				this._efficiency = value;
				this._isDirty = true;
				
				OnPropertyChanged("Efficiency");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Effectiveness property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Effectiveness
		{
			get
			{
				return this._effectiveness; 
			}
			set
			{
				if (_effectiveness == value)
					return;
					
				this._effectiveness = value;
				this._isDirty = true;
				
				OnPropertyChanged("Effectiveness");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Manpower property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Manpower
		{
			get
			{
				return this._manpower; 
			}
			set
			{
				if (_manpower == value)
					return;
					
				this._manpower = value;
				this._isDirty = true;
				
				OnPropertyChanged("Manpower");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomField1 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CustomField1
		{
			get
			{
				return this._customField1; 
			}
			set
			{
				if (_customField1 == value)
					return;
					
				this._customField1 = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomField1");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomField2 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CustomField2
		{
			get
			{
				return this._customField2; 
			}
			set
			{
				if (_customField2 == value)
					return;
					
				this._customField2 = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomField2");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CustomField3 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CustomField3
		{
			get
			{
				return this._customField3; 
			}
			set
			{
				if (_customField3 == value)
					return;
					
				this._customField3 = value;
				this._isDirty = true;
				
				OnPropertyChanged("CustomField3");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the EnvironmentInd property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String EnvironmentInd
		{
			get
			{
				return this._environmentInd; 
			}
			set
			{
				if (_environmentInd == value)
					return;
					
				this._environmentInd = value;
				this._isDirty = true;
				
				OnPropertyChanged("EnvironmentInd");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GovernanceMech property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GovernanceMech
		{
			get
			{
				return this._governanceMech; 
			}
			set
			{
				if (_governanceMech == value)
					return;
					
				this._governanceMech = value;
				this._isDirty = true;
				
				OnPropertyChanged("GovernanceMech");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CapitalAvailability property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CapitalAvailability
		{
			get
			{
				return this._capitalAvailability; 
			}
			set
			{
				if (_capitalAvailability == value)
					return;
					
				this._capitalAvailability = value;
				this._isDirty = true;
				
				OnPropertyChanged("CapitalAvailability");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Competencies property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Competencies
		{
			get
			{
				return this._competencies; 
			}
			set
			{
				if (_competencies == value)
					return;
					
				this._competencies = value;
				this._isDirty = true;
				
				OnPropertyChanged("Competencies");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Ethics property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Ethics
		{
			get
			{
				return this._ethics; 
			}
			set
			{
				if (_ethics == value)
					return;
					
				this._ethics = value;
				this._isDirty = true;
				
				OnPropertyChanged("Ethics");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Facilities property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Facilities
		{
			get
			{
				return this._facilities; 
			}
			set
			{
				if (_facilities == value)
					return;
					
				this._facilities = value;
				this._isDirty = true;
				
				OnPropertyChanged("Facilities");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ServicesUSage property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ServicesUSage
		{
			get
			{
				return this._servicesUSage; 
			}
			set
			{
				if (_servicesUSage == value)
					return;
					
				this._servicesUSage = value;
				this._isDirty = true;
				
				OnPropertyChanged("ServicesUSage");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Equipment property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Equipment
		{
			get
			{
				return this._equipment; 
			}
			set
			{
				if (_equipment == value)
					return;
					
				this._equipment = value;
				this._isDirty = true;
				
				OnPropertyChanged("Equipment");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TimeIndicator property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TimeIndicator
		{
			get
			{
				return this._timeIndicator; 
			}
			set
			{
				if (_timeIndicator == value)
					return;
					
				this._timeIndicator = value;
				this._isDirty = true;
				
				OnPropertyChanged("TimeIndicator");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GapType property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GapType
		{
			get
			{
				return this._gapType; 
			}
			set
			{
				if (_gapType == value)
					return;
					
				this._gapType = value;
				this._isDirty = true;
				
				OnPropertyChanged("GapType");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Description property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Description
		{
			get
			{
				return this._description; 
			}
			set
			{
				if (_description == value)
					return;
					
				this._description = value;
				this._isDirty = true;
				
				OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Abbreviation property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Abbreviation
		{
			get
			{
				return this._abbreviation; 
			}
			set
			{
				if (_abbreviation == value)
					return;
					
				this._abbreviation = value;
				this._isDirty = true;
				
				OnPropertyChanged("Abbreviation");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the IsBusinessExternal property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String IsBusinessExternal
		{
			get
			{
				return this._isBusinessExternal; 
			}
			set
			{
				if (_isBusinessExternal == value)
					return;
					
				this._isBusinessExternal = value;
				this._isDirty = true;
				
				OnPropertyChanged("IsBusinessExternal");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the StandardisationStatus property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String StandardisationStatus
		{
			get
			{
				return this._standardisationStatus; 
			}
			set
			{
				if (_standardisationStatus == value)
					return;
					
				this._standardisationStatus = value;
				this._isDirty = true;
				
				OnPropertyChanged("StandardisationStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the StandardisationStatusDate property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String StandardisationStatusDate
		{
			get
			{
				return this._standardisationStatusDate; 
			}
			set
			{
				if (_standardisationStatusDate == value)
					return;
					
				this._standardisationStatusDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("StandardisationStatusDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DataSourceID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DataSourceID
		{
			get
			{
				return this._dataSourceID; 
			}
			set
			{
				if (_dataSourceID == value)
					return;
					
				this._dataSourceID = value;
				this._isDirty = true;
				
				OnPropertyChanged("DataSourceID");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DataSourceName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DataSourceName
		{
			get
			{
				return this._dataSourceName; 
			}
			set
			{
				if (_dataSourceName == value)
					return;
					
				this._dataSourceName = value;
				this._isDirty = true;
				
				OnPropertyChanged("DataSourceName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GeneralRemarks property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GeneralRemarks
		{
			get
			{
				return this._generalRemarks; 
			}
			set
			{
				if (_generalRemarks == value)
					return;
					
				this._generalRemarks = value;
				this._isDirty = true;
				
				OnPropertyChanged("GeneralRemarks");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ArchitectureStatus property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ArchitectureStatus
		{
			get
			{
				return this._architectureStatus; 
			}
			set
			{
				if (_architectureStatus == value)
					return;
					
				this._architectureStatus = value;
				this._isDirty = true;
				
				OnPropertyChanged("ArchitectureStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ArchitectureStatusDate property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ArchitectureStatusDate
		{
			get
			{
				return this._architectureStatusDate; 
			}
			set
			{
				if (_architectureStatusDate == value)
					return;
					
				this._architectureStatusDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("ArchitectureStatusDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DesignRationale property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DesignRationale
		{
			get
			{
				return this._designRationale; 
			}
			set
			{
				if (_designRationale == value)
					return;
					
				this._designRationale = value;
				this._isDirty = true;
				
				OnPropertyChanged("DesignRationale");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the FunctionCategory property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String FunctionCategory
		{
			get
			{
				return this._functionCategory; 
			}
			set
			{
				if (_functionCategory == value)
					return;
					
				this._functionCategory = value;
				this._isDirty = true;
				
				OnPropertyChanged("FunctionCategory");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the OverallEfficiencyRating property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String OverallEfficiencyRating
		{
			get
			{
				return this._overallEfficiencyRating; 
			}
			set
			{
				if (_overallEfficiencyRating == value)
					return;
					
				this._overallEfficiencyRating = value;
				this._isDirty = true;
				
				OnPropertyChanged("OverallEfficiencyRating");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the OverallEffectivenessRating property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String OverallEffectivenessRating
		{
			get
			{
				return this._overallEffectivenessRating; 
			}
			set
			{
				if (_overallEffectivenessRating == value)
					return;
					
				this._overallEffectivenessRating = value;
				this._isDirty = true;
				
				OnPropertyChanged("OverallEffectivenessRating");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "METAView_Function_Retrieval"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed METAView_Function_RetrievalBase Entity 
		///</summary>
		public virtual METAView_Function_RetrievalBase Copy()
		{
			//shallow copy entity
			METAView_Function_Retrieval copy = new METAView_Function_Retrieval();
				copy.WorkspaceName = this.WorkspaceName;
				copy.WorkspaceTypeId = this.WorkspaceTypeId;
				copy.VCStatusID = this.VCStatusID;
				copy.pkid = this.pkid;
				copy.Machine = this.Machine;
				copy.VCMachineID = this.VCMachineID;
				copy.Name = this.Name;
				copy.ContextualIndicator = this.ContextualIndicator;
				copy.FunctionCriticality = this.FunctionCriticality;
				copy.ManagementAbility = this.ManagementAbility;
				copy.InfoAvailability = this.InfoAvailability;
				copy.LegalAspects = this.LegalAspects;
				copy.Technology = this.Technology;
				copy.Budget = this.Budget;
				copy.Energy = this.Energy;
				copy.RawMaterial = this.RawMaterial;
				copy.SkillAvailability = this.SkillAvailability;
				copy.Efficiency = this.Efficiency;
				copy.Effectiveness = this.Effectiveness;
				copy.Manpower = this.Manpower;
				copy.CustomField1 = this.CustomField1;
				copy.CustomField2 = this.CustomField2;
				copy.CustomField3 = this.CustomField3;
				copy.EnvironmentInd = this.EnvironmentInd;
				copy.GovernanceMech = this.GovernanceMech;
				copy.CapitalAvailability = this.CapitalAvailability;
				copy.Competencies = this.Competencies;
				copy.Ethics = this.Ethics;
				copy.Facilities = this.Facilities;
				copy.ServicesUSage = this.ServicesUSage;
				copy.Equipment = this.Equipment;
				copy.TimeIndicator = this.TimeIndicator;
				copy.GapType = this.GapType;
				copy.Description = this.Description;
				copy.Abbreviation = this.Abbreviation;
				copy.IsBusinessExternal = this.IsBusinessExternal;
				copy.StandardisationStatus = this.StandardisationStatus;
				copy.StandardisationStatusDate = this.StandardisationStatusDate;
				copy.DataSourceID = this.DataSourceID;
				copy.DataSourceName = this.DataSourceName;
				copy.GeneralRemarks = this.GeneralRemarks;
				copy.ArchitectureStatus = this.ArchitectureStatus;
				copy.ArchitectureStatusDate = this.ArchitectureStatusDate;
				copy.DesignRationale = this.DesignRationale;
				copy.FunctionCategory = this.FunctionCategory;
				copy.OverallEfficiencyRating = this.OverallEfficiencyRating;
				copy.OverallEffectivenessRating = this.OverallEffectivenessRating;
			copy.AcceptChanges();
			return (METAView_Function_Retrieval)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="METAView_Function_RetrievalBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(METAView_Function_RetrievalBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="METAView_Function_RetrievalBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="METAView_Function_RetrievalBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="METAView_Function_RetrievalBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(METAView_Function_RetrievalBase Object1, METAView_Function_RetrievalBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.WorkspaceName != Object2.WorkspaceName)
				equal = false;
			if (Object1.WorkspaceTypeId != null && Object2.WorkspaceTypeId != null )
			{
				if (Object1.WorkspaceTypeId != Object2.WorkspaceTypeId)
					equal = false;
			}
			else if (Object1.WorkspaceTypeId == null ^ Object1.WorkspaceTypeId == null )
			{
				equal = false;
			}
			if (Object1.VCStatusID != Object2.VCStatusID)
				equal = false;
			if (Object1.pkid != Object2.pkid)
				equal = false;
			if (Object1.Machine != Object2.Machine)
				equal = false;
			if (Object1.VCMachineID != null && Object2.VCMachineID != null )
			{
				if (Object1.VCMachineID != Object2.VCMachineID)
					equal = false;
			}
			else if (Object1.VCMachineID == null ^ Object1.VCMachineID == null )
			{
				equal = false;
			}
			if (Object1.Name != null && Object2.Name != null )
			{
				if (Object1.Name != Object2.Name)
					equal = false;
			}
			else if (Object1.Name == null ^ Object1.Name == null )
			{
				equal = false;
			}
			if (Object1.ContextualIndicator != null && Object2.ContextualIndicator != null )
			{
				if (Object1.ContextualIndicator != Object2.ContextualIndicator)
					equal = false;
			}
			else if (Object1.ContextualIndicator == null ^ Object1.ContextualIndicator == null )
			{
				equal = false;
			}
			if (Object1.FunctionCriticality != null && Object2.FunctionCriticality != null )
			{
				if (Object1.FunctionCriticality != Object2.FunctionCriticality)
					equal = false;
			}
			else if (Object1.FunctionCriticality == null ^ Object1.FunctionCriticality == null )
			{
				equal = false;
			}
			if (Object1.ManagementAbility != null && Object2.ManagementAbility != null )
			{
				if (Object1.ManagementAbility != Object2.ManagementAbility)
					equal = false;
			}
			else if (Object1.ManagementAbility == null ^ Object1.ManagementAbility == null )
			{
				equal = false;
			}
			if (Object1.InfoAvailability != null && Object2.InfoAvailability != null )
			{
				if (Object1.InfoAvailability != Object2.InfoAvailability)
					equal = false;
			}
			else if (Object1.InfoAvailability == null ^ Object1.InfoAvailability == null )
			{
				equal = false;
			}
			if (Object1.LegalAspects != null && Object2.LegalAspects != null )
			{
				if (Object1.LegalAspects != Object2.LegalAspects)
					equal = false;
			}
			else if (Object1.LegalAspects == null ^ Object1.LegalAspects == null )
			{
				equal = false;
			}
			if (Object1.Technology != null && Object2.Technology != null )
			{
				if (Object1.Technology != Object2.Technology)
					equal = false;
			}
			else if (Object1.Technology == null ^ Object1.Technology == null )
			{
				equal = false;
			}
			if (Object1.Budget != null && Object2.Budget != null )
			{
				if (Object1.Budget != Object2.Budget)
					equal = false;
			}
			else if (Object1.Budget == null ^ Object1.Budget == null )
			{
				equal = false;
			}
			if (Object1.Energy != null && Object2.Energy != null )
			{
				if (Object1.Energy != Object2.Energy)
					equal = false;
			}
			else if (Object1.Energy == null ^ Object1.Energy == null )
			{
				equal = false;
			}
			if (Object1.RawMaterial != null && Object2.RawMaterial != null )
			{
				if (Object1.RawMaterial != Object2.RawMaterial)
					equal = false;
			}
			else if (Object1.RawMaterial == null ^ Object1.RawMaterial == null )
			{
				equal = false;
			}
			if (Object1.SkillAvailability != null && Object2.SkillAvailability != null )
			{
				if (Object1.SkillAvailability != Object2.SkillAvailability)
					equal = false;
			}
			else if (Object1.SkillAvailability == null ^ Object1.SkillAvailability == null )
			{
				equal = false;
			}
			if (Object1.Efficiency != null && Object2.Efficiency != null )
			{
				if (Object1.Efficiency != Object2.Efficiency)
					equal = false;
			}
			else if (Object1.Efficiency == null ^ Object1.Efficiency == null )
			{
				equal = false;
			}
			if (Object1.Effectiveness != null && Object2.Effectiveness != null )
			{
				if (Object1.Effectiveness != Object2.Effectiveness)
					equal = false;
			}
			else if (Object1.Effectiveness == null ^ Object1.Effectiveness == null )
			{
				equal = false;
			}
			if (Object1.Manpower != null && Object2.Manpower != null )
			{
				if (Object1.Manpower != Object2.Manpower)
					equal = false;
			}
			else if (Object1.Manpower == null ^ Object1.Manpower == null )
			{
				equal = false;
			}
			if (Object1.CustomField1 != null && Object2.CustomField1 != null )
			{
				if (Object1.CustomField1 != Object2.CustomField1)
					equal = false;
			}
			else if (Object1.CustomField1 == null ^ Object1.CustomField1 == null )
			{
				equal = false;
			}
			if (Object1.CustomField2 != null && Object2.CustomField2 != null )
			{
				if (Object1.CustomField2 != Object2.CustomField2)
					equal = false;
			}
			else if (Object1.CustomField2 == null ^ Object1.CustomField2 == null )
			{
				equal = false;
			}
			if (Object1.CustomField3 != null && Object2.CustomField3 != null )
			{
				if (Object1.CustomField3 != Object2.CustomField3)
					equal = false;
			}
			else if (Object1.CustomField3 == null ^ Object1.CustomField3 == null )
			{
				equal = false;
			}
			if (Object1.EnvironmentInd != null && Object2.EnvironmentInd != null )
			{
				if (Object1.EnvironmentInd != Object2.EnvironmentInd)
					equal = false;
			}
			else if (Object1.EnvironmentInd == null ^ Object1.EnvironmentInd == null )
			{
				equal = false;
			}
			if (Object1.GovernanceMech != null && Object2.GovernanceMech != null )
			{
				if (Object1.GovernanceMech != Object2.GovernanceMech)
					equal = false;
			}
			else if (Object1.GovernanceMech == null ^ Object1.GovernanceMech == null )
			{
				equal = false;
			}
			if (Object1.CapitalAvailability != null && Object2.CapitalAvailability != null )
			{
				if (Object1.CapitalAvailability != Object2.CapitalAvailability)
					equal = false;
			}
			else if (Object1.CapitalAvailability == null ^ Object1.CapitalAvailability == null )
			{
				equal = false;
			}
			if (Object1.Competencies != null && Object2.Competencies != null )
			{
				if (Object1.Competencies != Object2.Competencies)
					equal = false;
			}
			else if (Object1.Competencies == null ^ Object1.Competencies == null )
			{
				equal = false;
			}
			if (Object1.Ethics != null && Object2.Ethics != null )
			{
				if (Object1.Ethics != Object2.Ethics)
					equal = false;
			}
			else if (Object1.Ethics == null ^ Object1.Ethics == null )
			{
				equal = false;
			}
			if (Object1.Facilities != null && Object2.Facilities != null )
			{
				if (Object1.Facilities != Object2.Facilities)
					equal = false;
			}
			else if (Object1.Facilities == null ^ Object1.Facilities == null )
			{
				equal = false;
			}
			if (Object1.ServicesUSage != null && Object2.ServicesUSage != null )
			{
				if (Object1.ServicesUSage != Object2.ServicesUSage)
					equal = false;
			}
			else if (Object1.ServicesUSage == null ^ Object1.ServicesUSage == null )
			{
				equal = false;
			}
			if (Object1.Equipment != null && Object2.Equipment != null )
			{
				if (Object1.Equipment != Object2.Equipment)
					equal = false;
			}
			else if (Object1.Equipment == null ^ Object1.Equipment == null )
			{
				equal = false;
			}
			if (Object1.TimeIndicator != null && Object2.TimeIndicator != null )
			{
				if (Object1.TimeIndicator != Object2.TimeIndicator)
					equal = false;
			}
			else if (Object1.TimeIndicator == null ^ Object1.TimeIndicator == null )
			{
				equal = false;
			}
			if (Object1.GapType != null && Object2.GapType != null )
			{
				if (Object1.GapType != Object2.GapType)
					equal = false;
			}
			else if (Object1.GapType == null ^ Object1.GapType == null )
			{
				equal = false;
			}
			if (Object1.Description != null && Object2.Description != null )
			{
				if (Object1.Description != Object2.Description)
					equal = false;
			}
			else if (Object1.Description == null ^ Object1.Description == null )
			{
				equal = false;
			}
			if (Object1.Abbreviation != null && Object2.Abbreviation != null )
			{
				if (Object1.Abbreviation != Object2.Abbreviation)
					equal = false;
			}
			else if (Object1.Abbreviation == null ^ Object1.Abbreviation == null )
			{
				equal = false;
			}
			if (Object1.IsBusinessExternal != null && Object2.IsBusinessExternal != null )
			{
				if (Object1.IsBusinessExternal != Object2.IsBusinessExternal)
					equal = false;
			}
			else if (Object1.IsBusinessExternal == null ^ Object1.IsBusinessExternal == null )
			{
				equal = false;
			}
			if (Object1.StandardisationStatus != null && Object2.StandardisationStatus != null )
			{
				if (Object1.StandardisationStatus != Object2.StandardisationStatus)
					equal = false;
			}
			else if (Object1.StandardisationStatus == null ^ Object1.StandardisationStatus == null )
			{
				equal = false;
			}
			if (Object1.StandardisationStatusDate != null && Object2.StandardisationStatusDate != null )
			{
				if (Object1.StandardisationStatusDate != Object2.StandardisationStatusDate)
					equal = false;
			}
			else if (Object1.StandardisationStatusDate == null ^ Object1.StandardisationStatusDate == null )
			{
				equal = false;
			}
			if (Object1.DataSourceID != null && Object2.DataSourceID != null )
			{
				if (Object1.DataSourceID != Object2.DataSourceID)
					equal = false;
			}
			else if (Object1.DataSourceID == null ^ Object1.DataSourceID == null )
			{
				equal = false;
			}
			if (Object1.DataSourceName != null && Object2.DataSourceName != null )
			{
				if (Object1.DataSourceName != Object2.DataSourceName)
					equal = false;
			}
			else if (Object1.DataSourceName == null ^ Object1.DataSourceName == null )
			{
				equal = false;
			}
			if (Object1.GeneralRemarks != null && Object2.GeneralRemarks != null )
			{
				if (Object1.GeneralRemarks != Object2.GeneralRemarks)
					equal = false;
			}
			else if (Object1.GeneralRemarks == null ^ Object1.GeneralRemarks == null )
			{
				equal = false;
			}
			if (Object1.ArchitectureStatus != null && Object2.ArchitectureStatus != null )
			{
				if (Object1.ArchitectureStatus != Object2.ArchitectureStatus)
					equal = false;
			}
			else if (Object1.ArchitectureStatus == null ^ Object1.ArchitectureStatus == null )
			{
				equal = false;
			}
			if (Object1.ArchitectureStatusDate != null && Object2.ArchitectureStatusDate != null )
			{
				if (Object1.ArchitectureStatusDate != Object2.ArchitectureStatusDate)
					equal = false;
			}
			else if (Object1.ArchitectureStatusDate == null ^ Object1.ArchitectureStatusDate == null )
			{
				equal = false;
			}
			if (Object1.DesignRationale != null && Object2.DesignRationale != null )
			{
				if (Object1.DesignRationale != Object2.DesignRationale)
					equal = false;
			}
			else if (Object1.DesignRationale == null ^ Object1.DesignRationale == null )
			{
				equal = false;
			}
			if (Object1.FunctionCategory != null && Object2.FunctionCategory != null )
			{
				if (Object1.FunctionCategory != Object2.FunctionCategory)
					equal = false;
			}
			else if (Object1.FunctionCategory == null ^ Object1.FunctionCategory == null )
			{
				equal = false;
			}
			if (Object1.OverallEfficiencyRating != null && Object2.OverallEfficiencyRating != null )
			{
				if (Object1.OverallEfficiencyRating != Object2.OverallEfficiencyRating)
					equal = false;
			}
			else if (Object1.OverallEfficiencyRating == null ^ Object1.OverallEfficiencyRating == null )
			{
				equal = false;
			}
			if (Object1.OverallEffectivenessRating != null && Object2.OverallEffectivenessRating != null )
			{
				if (Object1.OverallEffectivenessRating != Object2.OverallEffectivenessRating)
					equal = false;
			}
			else if (Object1.OverallEffectivenessRating == null ^ Object1.OverallEffectivenessRating == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(METAView_Function_Retrieval entity, string propertyName)
		{
			switch (propertyName)
			{
				case "WorkspaceName":
					return entity.WorkspaceName;
				case "WorkspaceTypeId":
					return entity.WorkspaceTypeId;
				case "VCStatusID":
					return entity.VCStatusID;
				case "pkid":
					return entity.pkid;
				case "Machine":
					return entity.Machine;
				case "VCMachineID":
					return entity.VCMachineID;
				case "Name":
					return entity.Name;
				case "ContextualIndicator":
					return entity.ContextualIndicator;
				case "FunctionCriticality":
					return entity.FunctionCriticality;
				case "ManagementAbility":
					return entity.ManagementAbility;
				case "InfoAvailability":
					return entity.InfoAvailability;
				case "LegalAspects":
					return entity.LegalAspects;
				case "Technology":
					return entity.Technology;
				case "Budget":
					return entity.Budget;
				case "Energy":
					return entity.Energy;
				case "RawMaterial":
					return entity.RawMaterial;
				case "SkillAvailability":
					return entity.SkillAvailability;
				case "Efficiency":
					return entity.Efficiency;
				case "Effectiveness":
					return entity.Effectiveness;
				case "Manpower":
					return entity.Manpower;
				case "CustomField1":
					return entity.CustomField1;
				case "CustomField2":
					return entity.CustomField2;
				case "CustomField3":
					return entity.CustomField3;
				case "EnvironmentInd":
					return entity.EnvironmentInd;
				case "GovernanceMech":
					return entity.GovernanceMech;
				case "CapitalAvailability":
					return entity.CapitalAvailability;
				case "Competencies":
					return entity.Competencies;
				case "Ethics":
					return entity.Ethics;
				case "Facilities":
					return entity.Facilities;
				case "ServicesUSage":
					return entity.ServicesUSage;
				case "Equipment":
					return entity.Equipment;
				case "TimeIndicator":
					return entity.TimeIndicator;
				case "GapType":
					return entity.GapType;
				case "Description":
					return entity.Description;
				case "Abbreviation":
					return entity.Abbreviation;
				case "IsBusinessExternal":
					return entity.IsBusinessExternal;
				case "StandardisationStatus":
					return entity.StandardisationStatus;
				case "StandardisationStatusDate":
					return entity.StandardisationStatusDate;
				case "DataSourceID":
					return entity.DataSourceID;
				case "DataSourceName":
					return entity.DataSourceName;
				case "GeneralRemarks":
					return entity.GeneralRemarks;
				case "ArchitectureStatus":
					return entity.ArchitectureStatus;
				case "ArchitectureStatusDate":
					return entity.ArchitectureStatusDate;
				case "DesignRationale":
					return entity.DesignRationale;
				case "FunctionCategory":
					return entity.FunctionCategory;
				case "OverallEfficiencyRating":
					return entity.OverallEfficiencyRating;
				case "OverallEffectivenessRating":
					return entity.OverallEffectivenessRating;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as METAView_Function_Retrieval, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{48}{47}- WorkspaceName: {0}{47}- WorkspaceTypeId: {1}{47}- VCStatusID: {2}{47}- pkid: {3}{47}- Machine: {4}{47}- VCMachineID: {5}{47}- Name: {6}{47}- ContextualIndicator: {7}{47}- FunctionCriticality: {8}{47}- ManagementAbility: {9}{47}- InfoAvailability: {10}{47}- LegalAspects: {11}{47}- Technology: {12}{47}- Budget: {13}{47}- Energy: {14}{47}- RawMaterial: {15}{47}- SkillAvailability: {16}{47}- Efficiency: {17}{47}- Effectiveness: {18}{47}- Manpower: {19}{47}- CustomField1: {20}{47}- CustomField2: {21}{47}- CustomField3: {22}{47}- EnvironmentInd: {23}{47}- GovernanceMech: {24}{47}- CapitalAvailability: {25}{47}- Competencies: {26}{47}- Ethics: {27}{47}- Facilities: {28}{47}- ServicesUSage: {29}{47}- Equipment: {30}{47}- TimeIndicator: {31}{47}- GapType: {32}{47}- Description: {33}{47}- Abbreviation: {34}{47}- IsBusinessExternal: {35}{47}- StandardisationStatus: {36}{47}- StandardisationStatusDate: {37}{47}- DataSourceID: {38}{47}- DataSourceName: {39}{47}- GeneralRemarks: {40}{47}- ArchitectureStatus: {41}{47}- ArchitectureStatusDate: {42}{47}- DesignRationale: {43}{47}- FunctionCategory: {44}{47}- OverallEfficiencyRating: {45}{47}- OverallEffectivenessRating: {46}{47}", 
				this.WorkspaceName,
				(this.WorkspaceTypeId == null) ? string.Empty : this.WorkspaceTypeId.ToString(),
			     
				this.VCStatusID,
				this.pkid,
				this.Machine,
				(this.VCMachineID == null) ? string.Empty : this.VCMachineID.ToString(),
			     
				(this.Name == null) ? string.Empty : this.Name.ToString(),
			     
				(this.ContextualIndicator == null) ? string.Empty : this.ContextualIndicator.ToString(),
			     
				(this.FunctionCriticality == null) ? string.Empty : this.FunctionCriticality.ToString(),
			     
				(this.ManagementAbility == null) ? string.Empty : this.ManagementAbility.ToString(),
			     
				(this.InfoAvailability == null) ? string.Empty : this.InfoAvailability.ToString(),
			     
				(this.LegalAspects == null) ? string.Empty : this.LegalAspects.ToString(),
			     
				(this.Technology == null) ? string.Empty : this.Technology.ToString(),
			     
				(this.Budget == null) ? string.Empty : this.Budget.ToString(),
			     
				(this.Energy == null) ? string.Empty : this.Energy.ToString(),
			     
				(this.RawMaterial == null) ? string.Empty : this.RawMaterial.ToString(),
			     
				(this.SkillAvailability == null) ? string.Empty : this.SkillAvailability.ToString(),
			     
				(this.Efficiency == null) ? string.Empty : this.Efficiency.ToString(),
			     
				(this.Effectiveness == null) ? string.Empty : this.Effectiveness.ToString(),
			     
				(this.Manpower == null) ? string.Empty : this.Manpower.ToString(),
			     
				(this.CustomField1 == null) ? string.Empty : this.CustomField1.ToString(),
			     
				(this.CustomField2 == null) ? string.Empty : this.CustomField2.ToString(),
			     
				(this.CustomField3 == null) ? string.Empty : this.CustomField3.ToString(),
			     
				(this.EnvironmentInd == null) ? string.Empty : this.EnvironmentInd.ToString(),
			     
				(this.GovernanceMech == null) ? string.Empty : this.GovernanceMech.ToString(),
			     
				(this.CapitalAvailability == null) ? string.Empty : this.CapitalAvailability.ToString(),
			     
				(this.Competencies == null) ? string.Empty : this.Competencies.ToString(),
			     
				(this.Ethics == null) ? string.Empty : this.Ethics.ToString(),
			     
				(this.Facilities == null) ? string.Empty : this.Facilities.ToString(),
			     
				(this.ServicesUSage == null) ? string.Empty : this.ServicesUSage.ToString(),
			     
				(this.Equipment == null) ? string.Empty : this.Equipment.ToString(),
			     
				(this.TimeIndicator == null) ? string.Empty : this.TimeIndicator.ToString(),
			     
				(this.GapType == null) ? string.Empty : this.GapType.ToString(),
			     
				(this.Description == null) ? string.Empty : this.Description.ToString(),
			     
				(this.Abbreviation == null) ? string.Empty : this.Abbreviation.ToString(),
			     
				(this.IsBusinessExternal == null) ? string.Empty : this.IsBusinessExternal.ToString(),
			     
				(this.StandardisationStatus == null) ? string.Empty : this.StandardisationStatus.ToString(),
			     
				(this.StandardisationStatusDate == null) ? string.Empty : this.StandardisationStatusDate.ToString(),
			     
				(this.DataSourceID == null) ? string.Empty : this.DataSourceID.ToString(),
			     
				(this.DataSourceName == null) ? string.Empty : this.DataSourceName.ToString(),
			     
				(this.GeneralRemarks == null) ? string.Empty : this.GeneralRemarks.ToString(),
			     
				(this.ArchitectureStatus == null) ? string.Empty : this.ArchitectureStatus.ToString(),
			     
				(this.ArchitectureStatusDate == null) ? string.Empty : this.ArchitectureStatusDate.ToString(),
			     
				(this.DesignRationale == null) ? string.Empty : this.DesignRationale.ToString(),
			     
				(this.FunctionCategory == null) ? string.Empty : this.FunctionCategory.ToString(),
			     
				(this.OverallEfficiencyRating == null) ? string.Empty : this.OverallEfficiencyRating.ToString(),
			     
				(this.OverallEffectivenessRating == null) ? string.Empty : this.OverallEffectivenessRating.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the METAView_Function_Retrieval columns.
	/// </summary>
	[Serializable]
	public enum METAView_Function_RetrievalColumn
	{
		/// <summary>
		/// WorkspaceName : 
		/// </summary>
		[EnumTextValue("WorkspaceName")]
		[ColumnEnum("WorkspaceName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		WorkspaceName,
		/// <summary>
		/// WorkspaceTypeId : 
		/// </summary>
		[EnumTextValue("WorkspaceTypeId")]
		[ColumnEnum("WorkspaceTypeId", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		WorkspaceTypeId,
		/// <summary>
		/// VCStatusID : 
		/// </summary>
		[EnumTextValue("VCStatusID")]
		[ColumnEnum("VCStatusID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		VCStatusID,
		/// <summary>
		/// pkid : 
		/// </summary>
		[EnumTextValue("pkid")]
		[ColumnEnum("pkid", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		pkid,
		/// <summary>
		/// Machine : 
		/// </summary>
		[EnumTextValue("Machine")]
		[ColumnEnum("Machine", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		Machine,
		/// <summary>
		/// VCMachineID : 
		/// </summary>
		[EnumTextValue("VCMachineID")]
		[ColumnEnum("VCMachineID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		VCMachineID,
		/// <summary>
		/// Name : 
		/// </summary>
		[EnumTextValue("Name")]
		[ColumnEnum("Name", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Name,
		/// <summary>
		/// ContextualIndicator : 
		/// </summary>
		[EnumTextValue("ContextualIndicator")]
		[ColumnEnum("ContextualIndicator", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ContextualIndicator,
		/// <summary>
		/// FunctionCriticality : 
		/// </summary>
		[EnumTextValue("FunctionCriticality")]
		[ColumnEnum("FunctionCriticality", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		FunctionCriticality,
		/// <summary>
		/// ManagementAbility : 
		/// </summary>
		[EnumTextValue("ManagementAbility")]
		[ColumnEnum("ManagementAbility", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ManagementAbility,
		/// <summary>
		/// InfoAvailability : 
		/// </summary>
		[EnumTextValue("InfoAvailability")]
		[ColumnEnum("InfoAvailability", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		InfoAvailability,
		/// <summary>
		/// LegalAspects : 
		/// </summary>
		[EnumTextValue("LegalAspects")]
		[ColumnEnum("LegalAspects", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		LegalAspects,
		/// <summary>
		/// Technology : 
		/// </summary>
		[EnumTextValue("Technology")]
		[ColumnEnum("Technology", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Technology,
		/// <summary>
		/// Budget : 
		/// </summary>
		[EnumTextValue("Budget")]
		[ColumnEnum("Budget", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Budget,
		/// <summary>
		/// Energy : 
		/// </summary>
		[EnumTextValue("Energy")]
		[ColumnEnum("Energy", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Energy,
		/// <summary>
		/// RawMaterial : 
		/// </summary>
		[EnumTextValue("RawMaterial")]
		[ColumnEnum("RawMaterial", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		RawMaterial,
		/// <summary>
		/// SkillAvailability : 
		/// </summary>
		[EnumTextValue("SkillAvailability")]
		[ColumnEnum("SkillAvailability", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		SkillAvailability,
		/// <summary>
		/// Efficiency : 
		/// </summary>
		[EnumTextValue("Efficiency")]
		[ColumnEnum("Efficiency", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Efficiency,
		/// <summary>
		/// Effectiveness : 
		/// </summary>
		[EnumTextValue("Effectiveness")]
		[ColumnEnum("Effectiveness", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Effectiveness,
		/// <summary>
		/// Manpower : 
		/// </summary>
		[EnumTextValue("Manpower")]
		[ColumnEnum("Manpower", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Manpower,
		/// <summary>
		/// CustomField1 : 
		/// </summary>
		[EnumTextValue("CustomField1")]
		[ColumnEnum("CustomField1", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		CustomField1,
		/// <summary>
		/// CustomField2 : 
		/// </summary>
		[EnumTextValue("CustomField2")]
		[ColumnEnum("CustomField2", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		CustomField2,
		/// <summary>
		/// CustomField3 : 
		/// </summary>
		[EnumTextValue("CustomField3")]
		[ColumnEnum("CustomField3", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		CustomField3,
		/// <summary>
		/// EnvironmentInd : 
		/// </summary>
		[EnumTextValue("EnvironmentInd")]
		[ColumnEnum("EnvironmentInd", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		EnvironmentInd,
		/// <summary>
		/// GovernanceMech : 
		/// </summary>
		[EnumTextValue("GovernanceMech")]
		[ColumnEnum("GovernanceMech", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		GovernanceMech,
		/// <summary>
		/// CapitalAvailability : 
		/// </summary>
		[EnumTextValue("CapitalAvailability")]
		[ColumnEnum("CapitalAvailability", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		CapitalAvailability,
		/// <summary>
		/// Competencies : 
		/// </summary>
		[EnumTextValue("Competencies")]
		[ColumnEnum("Competencies", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Competencies,
		/// <summary>
		/// Ethics : 
		/// </summary>
		[EnumTextValue("Ethics")]
		[ColumnEnum("Ethics", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Ethics,
		/// <summary>
		/// Facilities : 
		/// </summary>
		[EnumTextValue("Facilities")]
		[ColumnEnum("Facilities", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Facilities,
		/// <summary>
		/// ServicesUSage : 
		/// </summary>
		[EnumTextValue("ServicesUSage")]
		[ColumnEnum("ServicesUSage", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ServicesUSage,
		/// <summary>
		/// Equipment : 
		/// </summary>
		[EnumTextValue("Equipment")]
		[ColumnEnum("Equipment", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Equipment,
		/// <summary>
		/// TimeIndicator : 
		/// </summary>
		[EnumTextValue("TimeIndicator")]
		[ColumnEnum("TimeIndicator", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		TimeIndicator,
		/// <summary>
		/// GapType : 
		/// </summary>
		[EnumTextValue("GapType")]
		[ColumnEnum("GapType", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		GapType,
		/// <summary>
		/// Description : 
		/// </summary>
		[EnumTextValue("Description")]
		[ColumnEnum("Description", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Description,
		/// <summary>
		/// Abbreviation : 
		/// </summary>
		[EnumTextValue("Abbreviation")]
		[ColumnEnum("Abbreviation", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Abbreviation,
		/// <summary>
		/// IsBusinessExternal : 
		/// </summary>
		[EnumTextValue("IsBusinessExternal")]
		[ColumnEnum("IsBusinessExternal", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		IsBusinessExternal,
		/// <summary>
		/// StandardisationStatus : 
		/// </summary>
		[EnumTextValue("StandardisationStatus")]
		[ColumnEnum("StandardisationStatus", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		StandardisationStatus,
		/// <summary>
		/// StandardisationStatusDate : 
		/// </summary>
		[EnumTextValue("StandardisationStatusDate")]
		[ColumnEnum("StandardisationStatusDate", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		StandardisationStatusDate,
		/// <summary>
		/// DataSourceID : 
		/// </summary>
		[EnumTextValue("DataSourceID")]
		[ColumnEnum("DataSourceID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		DataSourceID,
		/// <summary>
		/// DataSourceName : 
		/// </summary>
		[EnumTextValue("DataSourceName")]
		[ColumnEnum("DataSourceName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		DataSourceName,
		/// <summary>
		/// GeneralRemarks : 
		/// </summary>
		[EnumTextValue("GeneralRemarks")]
		[ColumnEnum("GeneralRemarks", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		GeneralRemarks,
		/// <summary>
		/// ArchitectureStatus : 
		/// </summary>
		[EnumTextValue("ArchitectureStatus")]
		[ColumnEnum("ArchitectureStatus", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ArchitectureStatus,
		/// <summary>
		/// ArchitectureStatusDate : 
		/// </summary>
		[EnumTextValue("ArchitectureStatusDate")]
		[ColumnEnum("ArchitectureStatusDate", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ArchitectureStatusDate,
		/// <summary>
		/// DesignRationale : 
		/// </summary>
		[EnumTextValue("DesignRationale")]
		[ColumnEnum("DesignRationale", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		DesignRationale,
		/// <summary>
		/// FunctionCategory : 
		/// </summary>
		[EnumTextValue("FunctionCategory")]
		[ColumnEnum("FunctionCategory", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		FunctionCategory,
		/// <summary>
		/// OverallEfficiencyRating : 
		/// </summary>
		[EnumTextValue("OverallEfficiencyRating")]
		[ColumnEnum("OverallEfficiencyRating", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		OverallEfficiencyRating,
		/// <summary>
		/// OverallEffectivenessRating : 
		/// </summary>
		[EnumTextValue("OverallEffectivenessRating")]
		[ColumnEnum("OverallEffectivenessRating", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		OverallEffectivenessRating
	}//End enum

} // end namespace
