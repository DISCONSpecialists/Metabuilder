/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file METAView_PeripheralComponent_Listing.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace MetaBuilder.BusinessLogic
{
	///<summary>
	/// An object representation of the 'METAView_PeripheralComponent_Listing' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("METAView_PeripheralComponent_ListingBase")]
	public abstract partial class METAView_PeripheralComponent_ListingBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// WorkspaceName : 
		/// </summary>
		private System.String		  _workspaceName = string.Empty;
		
		/// <summary>
		/// WorkspaceTypeId : 
		/// </summary>
		private System.Int32?		  _workspaceTypeId = null;
		
		/// <summary>
		/// VCStatusID : 
		/// </summary>
		private System.Int32		  _vCStatusID = (int)0;
		
		/// <summary>
		/// pkid : 
		/// </summary>
		private System.Int32		  _pkid = (int)0;
		
		/// <summary>
		/// Machine : 
		/// </summary>
		private System.String		  _machine = string.Empty;
		
		/// <summary>
		/// VCMachineID : 
		/// </summary>
		private System.String		  _vCMachineID = null;
		
		/// <summary>
		/// Name : 
		/// </summary>
		private System.String		  _name = null;
		
		/// <summary>
		/// PeripheralComponentType : 
		/// </summary>
		private System.String		  _peripheralComponentType = null;
		
		/// <summary>
		/// Description : 
		/// </summary>
		private System.String		  _description = null;
		
		/// <summary>
		/// Abbreviation : 
		/// </summary>
		private System.String		  _abbreviation = null;
		
		/// <summary>
		/// IsBusinessExternal : 
		/// </summary>
		private System.String		  _isBusinessExternal = null;
		
		/// <summary>
		/// DataSourceID : 
		/// </summary>
		private System.String		  _dataSourceID = null;
		
		/// <summary>
		/// DataSourceName : 
		/// </summary>
		private System.String		  _dataSourceName = null;
		
		/// <summary>
		/// GeneralRemarks : 
		/// </summary>
		private System.String		  _generalRemarks = null;
		
		/// <summary>
		/// GapType : 
		/// </summary>
		private System.String		  _gapType = null;
		
		/// <summary>
		/// SeverityRating : 
		/// </summary>
		private System.String		  _severityRating = null;
		
		/// <summary>
		/// ConfigurationID : 
		/// </summary>
		private System.String		  _configurationID = null;
		
		/// <summary>
		/// Make : 
		/// </summary>
		private System.String		  _make = null;
		
		/// <summary>
		/// Model : 
		/// </summary>
		private System.String		  _model = null;
		
		/// <summary>
		/// ModelNumber : 
		/// </summary>
		private System.String		  _modelNumber = null;
		
		/// <summary>
		/// SerialNumber : 
		/// </summary>
		private System.String		  _serialNumber = null;
		
		/// <summary>
		/// AssetNumber : 
		/// </summary>
		private System.String		  _assetNumber = null;
		
		/// <summary>
		/// DatePurchased : 
		/// </summary>
		private System.String		  _datePurchased = null;
		
		/// <summary>
		/// UnderWarranty : 
		/// </summary>
		private System.String		  _underWarranty = null;
		
		/// <summary>
		/// IsManaged : 
		/// </summary>
		private System.String		  _isManaged = null;
		
		/// <summary>
		/// ContractNumber : 
		/// </summary>
		private System.String		  _contractNumber = null;
		
		/// <summary>
		/// NetworkAddress1 : 
		/// </summary>
		private System.String		  _networkAddress1 = null;
		
		/// <summary>
		/// NetworkAddress2 : 
		/// </summary>
		private System.String		  _networkAddress2 = null;
		
		/// <summary>
		/// NetworkAddress3 : 
		/// </summary>
		private System.String		  _networkAddress3 = null;
		
		/// <summary>
		/// NetworkAddress4 : 
		/// </summary>
		private System.String		  _networkAddress4 = null;
		
		/// <summary>
		/// NetworkAddress5 : 
		/// </summary>
		private System.String		  _networkAddress5 = null;
		
		/// <summary>
		/// CopyPPM : 
		/// </summary>
		private System.String		  _copyPPM = null;
		
		/// <summary>
		/// PrintPPM : 
		/// </summary>
		private System.String		  _printPPM = null;
		
		/// <summary>
		/// IsColor : 
		/// </summary>
		private System.String		  _isColor = null;
		
		/// <summary>
		/// IsNetwork : 
		/// </summary>
		private System.String		  _isNetwork = null;
		
		/// <summary>
		/// ArchitectureStatus : 
		/// </summary>
		private System.String		  _architectureStatus = null;
		
		/// <summary>
		/// ArchitectureStatusDate : 
		/// </summary>
		private System.String		  _architectureStatusDate = null;
		
		/// <summary>
		/// DesignRationale : 
		/// </summary>
		private System.String		  _designRationale = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="METAView_PeripheralComponent_ListingBase"/> instance.
		///</summary>
		public METAView_PeripheralComponent_ListingBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="METAView_PeripheralComponent_ListingBase"/> instance.
		///</summary>
		///<param name="_workspaceName"></param>
		///<param name="_workspaceTypeId"></param>
		///<param name="_vCStatusID"></param>
		///<param name="_pkid"></param>
		///<param name="_machine"></param>
		///<param name="_vCMachineID"></param>
		///<param name="_name"></param>
		///<param name="_peripheralComponentType"></param>
		///<param name="_description"></param>
		///<param name="_abbreviation"></param>
		///<param name="_isBusinessExternal"></param>
		///<param name="_dataSourceID"></param>
		///<param name="_dataSourceName"></param>
		///<param name="_generalRemarks"></param>
		///<param name="_gapType"></param>
		///<param name="_severityRating"></param>
		///<param name="_configurationID"></param>
		///<param name="_make"></param>
		///<param name="_model"></param>
		///<param name="_modelNumber"></param>
		///<param name="_serialNumber"></param>
		///<param name="_assetNumber"></param>
		///<param name="_datePurchased"></param>
		///<param name="_underWarranty"></param>
		///<param name="_isManaged"></param>
		///<param name="_contractNumber"></param>
		///<param name="_networkAddress1"></param>
		///<param name="_networkAddress2"></param>
		///<param name="_networkAddress3"></param>
		///<param name="_networkAddress4"></param>
		///<param name="_networkAddress5"></param>
		///<param name="_copyPPM"></param>
		///<param name="_printPPM"></param>
		///<param name="_isColor"></param>
		///<param name="_isNetwork"></param>
		///<param name="_architectureStatus"></param>
		///<param name="_architectureStatusDate"></param>
		///<param name="_designRationale"></param>
		public METAView_PeripheralComponent_ListingBase(System.String _workspaceName, System.Int32? _workspaceTypeId, System.Int32 _vCStatusID, System.Int32 _pkid, System.String _machine, System.String _vCMachineID, System.String _name, System.String _peripheralComponentType, System.String _description, System.String _abbreviation, System.String _isBusinessExternal, System.String _dataSourceID, System.String _dataSourceName, System.String _generalRemarks, System.String _gapType, System.String _severityRating, System.String _configurationID, System.String _make, System.String _model, System.String _modelNumber, System.String _serialNumber, System.String _assetNumber, System.String _datePurchased, System.String _underWarranty, System.String _isManaged, System.String _contractNumber, System.String _networkAddress1, System.String _networkAddress2, System.String _networkAddress3, System.String _networkAddress4, System.String _networkAddress5, System.String _copyPPM, System.String _printPPM, System.String _isColor, System.String _isNetwork, System.String _architectureStatus, System.String _architectureStatusDate, System.String _designRationale)
		{
			this._workspaceName = _workspaceName;
			this._workspaceTypeId = _workspaceTypeId;
			this._vCStatusID = _vCStatusID;
			this._pkid = _pkid;
			this._machine = _machine;
			this._vCMachineID = _vCMachineID;
			this._name = _name;
			this._peripheralComponentType = _peripheralComponentType;
			this._description = _description;
			this._abbreviation = _abbreviation;
			this._isBusinessExternal = _isBusinessExternal;
			this._dataSourceID = _dataSourceID;
			this._dataSourceName = _dataSourceName;
			this._generalRemarks = _generalRemarks;
			this._gapType = _gapType;
			this._severityRating = _severityRating;
			this._configurationID = _configurationID;
			this._make = _make;
			this._model = _model;
			this._modelNumber = _modelNumber;
			this._serialNumber = _serialNumber;
			this._assetNumber = _assetNumber;
			this._datePurchased = _datePurchased;
			this._underWarranty = _underWarranty;
			this._isManaged = _isManaged;
			this._contractNumber = _contractNumber;
			this._networkAddress1 = _networkAddress1;
			this._networkAddress2 = _networkAddress2;
			this._networkAddress3 = _networkAddress3;
			this._networkAddress4 = _networkAddress4;
			this._networkAddress5 = _networkAddress5;
			this._copyPPM = _copyPPM;
			this._printPPM = _printPPM;
			this._isColor = _isColor;
			this._isNetwork = _isNetwork;
			this._architectureStatus = _architectureStatus;
			this._architectureStatusDate = _architectureStatusDate;
			this._designRationale = _designRationale;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="METAView_PeripheralComponent_Listing"/> instance.
		///</summary>
		///<param name="_workspaceName"></param>
		///<param name="_workspaceTypeId"></param>
		///<param name="_vCStatusID"></param>
		///<param name="_pkid"></param>
		///<param name="_machine"></param>
		///<param name="_vCMachineID"></param>
		///<param name="_name"></param>
		///<param name="_peripheralComponentType"></param>
		///<param name="_description"></param>
		///<param name="_abbreviation"></param>
		///<param name="_isBusinessExternal"></param>
		///<param name="_dataSourceID"></param>
		///<param name="_dataSourceName"></param>
		///<param name="_generalRemarks"></param>
		///<param name="_gapType"></param>
		///<param name="_severityRating"></param>
		///<param name="_configurationID"></param>
		///<param name="_make"></param>
		///<param name="_model"></param>
		///<param name="_modelNumber"></param>
		///<param name="_serialNumber"></param>
		///<param name="_assetNumber"></param>
		///<param name="_datePurchased"></param>
		///<param name="_underWarranty"></param>
		///<param name="_isManaged"></param>
		///<param name="_contractNumber"></param>
		///<param name="_networkAddress1"></param>
		///<param name="_networkAddress2"></param>
		///<param name="_networkAddress3"></param>
		///<param name="_networkAddress4"></param>
		///<param name="_networkAddress5"></param>
		///<param name="_copyPPM"></param>
		///<param name="_printPPM"></param>
		///<param name="_isColor"></param>
		///<param name="_isNetwork"></param>
		///<param name="_architectureStatus"></param>
		///<param name="_architectureStatusDate"></param>
		///<param name="_designRationale"></param>
		public static METAView_PeripheralComponent_Listing CreateMETAView_PeripheralComponent_Listing(System.String _workspaceName, System.Int32? _workspaceTypeId, System.Int32 _vCStatusID, System.Int32 _pkid, System.String _machine, System.String _vCMachineID, System.String _name, System.String _peripheralComponentType, System.String _description, System.String _abbreviation, System.String _isBusinessExternal, System.String _dataSourceID, System.String _dataSourceName, System.String _generalRemarks, System.String _gapType, System.String _severityRating, System.String _configurationID, System.String _make, System.String _model, System.String _modelNumber, System.String _serialNumber, System.String _assetNumber, System.String _datePurchased, System.String _underWarranty, System.String _isManaged, System.String _contractNumber, System.String _networkAddress1, System.String _networkAddress2, System.String _networkAddress3, System.String _networkAddress4, System.String _networkAddress5, System.String _copyPPM, System.String _printPPM, System.String _isColor, System.String _isNetwork, System.String _architectureStatus, System.String _architectureStatusDate, System.String _designRationale)
		{
			METAView_PeripheralComponent_Listing newMETAView_PeripheralComponent_Listing = new METAView_PeripheralComponent_Listing();
			newMETAView_PeripheralComponent_Listing.WorkspaceName = _workspaceName;
			newMETAView_PeripheralComponent_Listing.WorkspaceTypeId = _workspaceTypeId;
			newMETAView_PeripheralComponent_Listing.VCStatusID = _vCStatusID;
			newMETAView_PeripheralComponent_Listing.pkid = _pkid;
			newMETAView_PeripheralComponent_Listing.Machine = _machine;
			newMETAView_PeripheralComponent_Listing.VCMachineID = _vCMachineID;
			newMETAView_PeripheralComponent_Listing.Name = _name;
			newMETAView_PeripheralComponent_Listing.PeripheralComponentType = _peripheralComponentType;
			newMETAView_PeripheralComponent_Listing.Description = _description;
			newMETAView_PeripheralComponent_Listing.Abbreviation = _abbreviation;
			newMETAView_PeripheralComponent_Listing.IsBusinessExternal = _isBusinessExternal;
			newMETAView_PeripheralComponent_Listing.DataSourceID = _dataSourceID;
			newMETAView_PeripheralComponent_Listing.DataSourceName = _dataSourceName;
			newMETAView_PeripheralComponent_Listing.GeneralRemarks = _generalRemarks;
			newMETAView_PeripheralComponent_Listing.GapType = _gapType;
			newMETAView_PeripheralComponent_Listing.SeverityRating = _severityRating;
			newMETAView_PeripheralComponent_Listing.ConfigurationID = _configurationID;
			newMETAView_PeripheralComponent_Listing.Make = _make;
			newMETAView_PeripheralComponent_Listing.Model = _model;
			newMETAView_PeripheralComponent_Listing.ModelNumber = _modelNumber;
			newMETAView_PeripheralComponent_Listing.SerialNumber = _serialNumber;
			newMETAView_PeripheralComponent_Listing.AssetNumber = _assetNumber;
			newMETAView_PeripheralComponent_Listing.DatePurchased = _datePurchased;
			newMETAView_PeripheralComponent_Listing.UnderWarranty = _underWarranty;
			newMETAView_PeripheralComponent_Listing.IsManaged = _isManaged;
			newMETAView_PeripheralComponent_Listing.ContractNumber = _contractNumber;
			newMETAView_PeripheralComponent_Listing.NetworkAddress1 = _networkAddress1;
			newMETAView_PeripheralComponent_Listing.NetworkAddress2 = _networkAddress2;
			newMETAView_PeripheralComponent_Listing.NetworkAddress3 = _networkAddress3;
			newMETAView_PeripheralComponent_Listing.NetworkAddress4 = _networkAddress4;
			newMETAView_PeripheralComponent_Listing.NetworkAddress5 = _networkAddress5;
			newMETAView_PeripheralComponent_Listing.CopyPPM = _copyPPM;
			newMETAView_PeripheralComponent_Listing.PrintPPM = _printPPM;
			newMETAView_PeripheralComponent_Listing.IsColor = _isColor;
			newMETAView_PeripheralComponent_Listing.IsNetwork = _isNetwork;
			newMETAView_PeripheralComponent_Listing.ArchitectureStatus = _architectureStatus;
			newMETAView_PeripheralComponent_Listing.ArchitectureStatusDate = _architectureStatusDate;
			newMETAView_PeripheralComponent_Listing.DesignRationale = _designRationale;
			return newMETAView_PeripheralComponent_Listing;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the WorkspaceName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String WorkspaceName
		{
			get
			{
				return this._workspaceName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "WorkspaceName does not allow null values.");
				if (_workspaceName == value)
					return;
					
				this._workspaceName = value;
				this._isDirty = true;
				
				OnPropertyChanged("WorkspaceName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the WorkspaceTypeId property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsWorkspaceTypeIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? WorkspaceTypeId
		{
			get
			{
				return this._workspaceTypeId; 
			}
			set
			{
				if (_workspaceTypeId == value && WorkspaceTypeId != null )
					return;
					
				this._workspaceTypeId = value;
				this._isDirty = true;
				
				OnPropertyChanged("WorkspaceTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the VCStatusID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 VCStatusID
		{
			get
			{
				return this._vCStatusID; 
			}
			set
			{
				if (_vCStatusID == value)
					return;
					
				this._vCStatusID = value;
				this._isDirty = true;
				
				OnPropertyChanged("VCStatusID");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the pkid property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 pkid
		{
			get
			{
				return this._pkid; 
			}
			set
			{
				if (_pkid == value)
					return;
					
				this._pkid = value;
				this._isDirty = true;
				
				OnPropertyChanged("pkid");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Machine property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Machine
		{
			get
			{
				return this._machine; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "Machine does not allow null values.");
				if (_machine == value)
					return;
					
				this._machine = value;
				this._isDirty = true;
				
				OnPropertyChanged("Machine");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the VCMachineID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String VCMachineID
		{
			get
			{
				return this._vCMachineID; 
			}
			set
			{
				if (_vCMachineID == value)
					return;
					
				this._vCMachineID = value;
				this._isDirty = true;
				
				OnPropertyChanged("VCMachineID");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Name property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Name
		{
			get
			{
				return this._name; 
			}
			set
			{
				if (_name == value)
					return;
					
				this._name = value;
				this._isDirty = true;
				
				OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PeripheralComponentType property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PeripheralComponentType
		{
			get
			{
				return this._peripheralComponentType; 
			}
			set
			{
				if (_peripheralComponentType == value)
					return;
					
				this._peripheralComponentType = value;
				this._isDirty = true;
				
				OnPropertyChanged("PeripheralComponentType");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Description property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Description
		{
			get
			{
				return this._description; 
			}
			set
			{
				if (_description == value)
					return;
					
				this._description = value;
				this._isDirty = true;
				
				OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Abbreviation property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Abbreviation
		{
			get
			{
				return this._abbreviation; 
			}
			set
			{
				if (_abbreviation == value)
					return;
					
				this._abbreviation = value;
				this._isDirty = true;
				
				OnPropertyChanged("Abbreviation");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the IsBusinessExternal property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String IsBusinessExternal
		{
			get
			{
				return this._isBusinessExternal; 
			}
			set
			{
				if (_isBusinessExternal == value)
					return;
					
				this._isBusinessExternal = value;
				this._isDirty = true;
				
				OnPropertyChanged("IsBusinessExternal");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DataSourceID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DataSourceID
		{
			get
			{
				return this._dataSourceID; 
			}
			set
			{
				if (_dataSourceID == value)
					return;
					
				this._dataSourceID = value;
				this._isDirty = true;
				
				OnPropertyChanged("DataSourceID");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DataSourceName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DataSourceName
		{
			get
			{
				return this._dataSourceName; 
			}
			set
			{
				if (_dataSourceName == value)
					return;
					
				this._dataSourceName = value;
				this._isDirty = true;
				
				OnPropertyChanged("DataSourceName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GeneralRemarks property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GeneralRemarks
		{
			get
			{
				return this._generalRemarks; 
			}
			set
			{
				if (_generalRemarks == value)
					return;
					
				this._generalRemarks = value;
				this._isDirty = true;
				
				OnPropertyChanged("GeneralRemarks");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GapType property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GapType
		{
			get
			{
				return this._gapType; 
			}
			set
			{
				if (_gapType == value)
					return;
					
				this._gapType = value;
				this._isDirty = true;
				
				OnPropertyChanged("GapType");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SeverityRating property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String SeverityRating
		{
			get
			{
				return this._severityRating; 
			}
			set
			{
				if (_severityRating == value)
					return;
					
				this._severityRating = value;
				this._isDirty = true;
				
				OnPropertyChanged("SeverityRating");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ConfigurationID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ConfigurationID
		{
			get
			{
				return this._configurationID; 
			}
			set
			{
				if (_configurationID == value)
					return;
					
				this._configurationID = value;
				this._isDirty = true;
				
				OnPropertyChanged("ConfigurationID");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Make property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Make
		{
			get
			{
				return this._make; 
			}
			set
			{
				if (_make == value)
					return;
					
				this._make = value;
				this._isDirty = true;
				
				OnPropertyChanged("Make");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Model property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Model
		{
			get
			{
				return this._model; 
			}
			set
			{
				if (_model == value)
					return;
					
				this._model = value;
				this._isDirty = true;
				
				OnPropertyChanged("Model");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ModelNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ModelNumber
		{
			get
			{
				return this._modelNumber; 
			}
			set
			{
				if (_modelNumber == value)
					return;
					
				this._modelNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("ModelNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SerialNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String SerialNumber
		{
			get
			{
				return this._serialNumber; 
			}
			set
			{
				if (_serialNumber == value)
					return;
					
				this._serialNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("SerialNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AssetNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String AssetNumber
		{
			get
			{
				return this._assetNumber; 
			}
			set
			{
				if (_assetNumber == value)
					return;
					
				this._assetNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("AssetNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DatePurchased property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DatePurchased
		{
			get
			{
				return this._datePurchased; 
			}
			set
			{
				if (_datePurchased == value)
					return;
					
				this._datePurchased = value;
				this._isDirty = true;
				
				OnPropertyChanged("DatePurchased");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UnderWarranty property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String UnderWarranty
		{
			get
			{
				return this._underWarranty; 
			}
			set
			{
				if (_underWarranty == value)
					return;
					
				this._underWarranty = value;
				this._isDirty = true;
				
				OnPropertyChanged("UnderWarranty");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the IsManaged property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String IsManaged
		{
			get
			{
				return this._isManaged; 
			}
			set
			{
				if (_isManaged == value)
					return;
					
				this._isManaged = value;
				this._isDirty = true;
				
				OnPropertyChanged("IsManaged");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ContractNumber property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ContractNumber
		{
			get
			{
				return this._contractNumber; 
			}
			set
			{
				if (_contractNumber == value)
					return;
					
				this._contractNumber = value;
				this._isDirty = true;
				
				OnPropertyChanged("ContractNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NetworkAddress1 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NetworkAddress1
		{
			get
			{
				return this._networkAddress1; 
			}
			set
			{
				if (_networkAddress1 == value)
					return;
					
				this._networkAddress1 = value;
				this._isDirty = true;
				
				OnPropertyChanged("NetworkAddress1");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NetworkAddress2 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NetworkAddress2
		{
			get
			{
				return this._networkAddress2; 
			}
			set
			{
				if (_networkAddress2 == value)
					return;
					
				this._networkAddress2 = value;
				this._isDirty = true;
				
				OnPropertyChanged("NetworkAddress2");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NetworkAddress3 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NetworkAddress3
		{
			get
			{
				return this._networkAddress3; 
			}
			set
			{
				if (_networkAddress3 == value)
					return;
					
				this._networkAddress3 = value;
				this._isDirty = true;
				
				OnPropertyChanged("NetworkAddress3");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NetworkAddress4 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NetworkAddress4
		{
			get
			{
				return this._networkAddress4; 
			}
			set
			{
				if (_networkAddress4 == value)
					return;
					
				this._networkAddress4 = value;
				this._isDirty = true;
				
				OnPropertyChanged("NetworkAddress4");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NetworkAddress5 property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String NetworkAddress5
		{
			get
			{
				return this._networkAddress5; 
			}
			set
			{
				if (_networkAddress5 == value)
					return;
					
				this._networkAddress5 = value;
				this._isDirty = true;
				
				OnPropertyChanged("NetworkAddress5");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CopyPPM property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CopyPPM
		{
			get
			{
				return this._copyPPM; 
			}
			set
			{
				if (_copyPPM == value)
					return;
					
				this._copyPPM = value;
				this._isDirty = true;
				
				OnPropertyChanged("CopyPPM");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the PrintPPM property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String PrintPPM
		{
			get
			{
				return this._printPPM; 
			}
			set
			{
				if (_printPPM == value)
					return;
					
				this._printPPM = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrintPPM");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the IsColor property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String IsColor
		{
			get
			{
				return this._isColor; 
			}
			set
			{
				if (_isColor == value)
					return;
					
				this._isColor = value;
				this._isDirty = true;
				
				OnPropertyChanged("IsColor");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the IsNetwork property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String IsNetwork
		{
			get
			{
				return this._isNetwork; 
			}
			set
			{
				if (_isNetwork == value)
					return;
					
				this._isNetwork = value;
				this._isDirty = true;
				
				OnPropertyChanged("IsNetwork");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ArchitectureStatus property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ArchitectureStatus
		{
			get
			{
				return this._architectureStatus; 
			}
			set
			{
				if (_architectureStatus == value)
					return;
					
				this._architectureStatus = value;
				this._isDirty = true;
				
				OnPropertyChanged("ArchitectureStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ArchitectureStatusDate property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String ArchitectureStatusDate
		{
			get
			{
				return this._architectureStatusDate; 
			}
			set
			{
				if (_architectureStatusDate == value)
					return;
					
				this._architectureStatusDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("ArchitectureStatusDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DesignRationale property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DesignRationale
		{
			get
			{
				return this._designRationale; 
			}
			set
			{
				if (_designRationale == value)
					return;
					
				this._designRationale = value;
				this._isDirty = true;
				
				OnPropertyChanged("DesignRationale");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "METAView_PeripheralComponent_Listing"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed METAView_PeripheralComponent_ListingBase Entity 
		///</summary>
		public virtual METAView_PeripheralComponent_ListingBase Copy()
		{
			//shallow copy entity
			METAView_PeripheralComponent_Listing copy = new METAView_PeripheralComponent_Listing();
				copy.WorkspaceName = this.WorkspaceName;
				copy.WorkspaceTypeId = this.WorkspaceTypeId;
				copy.VCStatusID = this.VCStatusID;
				copy.pkid = this.pkid;
				copy.Machine = this.Machine;
				copy.VCMachineID = this.VCMachineID;
				copy.Name = this.Name;
				copy.PeripheralComponentType = this.PeripheralComponentType;
				copy.Description = this.Description;
				copy.Abbreviation = this.Abbreviation;
				copy.IsBusinessExternal = this.IsBusinessExternal;
				copy.DataSourceID = this.DataSourceID;
				copy.DataSourceName = this.DataSourceName;
				copy.GeneralRemarks = this.GeneralRemarks;
				copy.GapType = this.GapType;
				copy.SeverityRating = this.SeverityRating;
				copy.ConfigurationID = this.ConfigurationID;
				copy.Make = this.Make;
				copy.Model = this.Model;
				copy.ModelNumber = this.ModelNumber;
				copy.SerialNumber = this.SerialNumber;
				copy.AssetNumber = this.AssetNumber;
				copy.DatePurchased = this.DatePurchased;
				copy.UnderWarranty = this.UnderWarranty;
				copy.IsManaged = this.IsManaged;
				copy.ContractNumber = this.ContractNumber;
				copy.NetworkAddress1 = this.NetworkAddress1;
				copy.NetworkAddress2 = this.NetworkAddress2;
				copy.NetworkAddress3 = this.NetworkAddress3;
				copy.NetworkAddress4 = this.NetworkAddress4;
				copy.NetworkAddress5 = this.NetworkAddress5;
				copy.CopyPPM = this.CopyPPM;
				copy.PrintPPM = this.PrintPPM;
				copy.IsColor = this.IsColor;
				copy.IsNetwork = this.IsNetwork;
				copy.ArchitectureStatus = this.ArchitectureStatus;
				copy.ArchitectureStatusDate = this.ArchitectureStatusDate;
				copy.DesignRationale = this.DesignRationale;
			copy.AcceptChanges();
			return (METAView_PeripheralComponent_Listing)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="METAView_PeripheralComponent_ListingBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(METAView_PeripheralComponent_ListingBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="METAView_PeripheralComponent_ListingBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="METAView_PeripheralComponent_ListingBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="METAView_PeripheralComponent_ListingBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(METAView_PeripheralComponent_ListingBase Object1, METAView_PeripheralComponent_ListingBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.WorkspaceName != Object2.WorkspaceName)
				equal = false;
			if (Object1.WorkspaceTypeId != null && Object2.WorkspaceTypeId != null )
			{
				if (Object1.WorkspaceTypeId != Object2.WorkspaceTypeId)
					equal = false;
			}
			else if (Object1.WorkspaceTypeId == null ^ Object1.WorkspaceTypeId == null )
			{
				equal = false;
			}
			if (Object1.VCStatusID != Object2.VCStatusID)
				equal = false;
			if (Object1.pkid != Object2.pkid)
				equal = false;
			if (Object1.Machine != Object2.Machine)
				equal = false;
			if (Object1.VCMachineID != null && Object2.VCMachineID != null )
			{
				if (Object1.VCMachineID != Object2.VCMachineID)
					equal = false;
			}
			else if (Object1.VCMachineID == null ^ Object1.VCMachineID == null )
			{
				equal = false;
			}
			if (Object1.Name != null && Object2.Name != null )
			{
				if (Object1.Name != Object2.Name)
					equal = false;
			}
			else if (Object1.Name == null ^ Object1.Name == null )
			{
				equal = false;
			}
			if (Object1.PeripheralComponentType != null && Object2.PeripheralComponentType != null )
			{
				if (Object1.PeripheralComponentType != Object2.PeripheralComponentType)
					equal = false;
			}
			else if (Object1.PeripheralComponentType == null ^ Object1.PeripheralComponentType == null )
			{
				equal = false;
			}
			if (Object1.Description != null && Object2.Description != null )
			{
				if (Object1.Description != Object2.Description)
					equal = false;
			}
			else if (Object1.Description == null ^ Object1.Description == null )
			{
				equal = false;
			}
			if (Object1.Abbreviation != null && Object2.Abbreviation != null )
			{
				if (Object1.Abbreviation != Object2.Abbreviation)
					equal = false;
			}
			else if (Object1.Abbreviation == null ^ Object1.Abbreviation == null )
			{
				equal = false;
			}
			if (Object1.IsBusinessExternal != null && Object2.IsBusinessExternal != null )
			{
				if (Object1.IsBusinessExternal != Object2.IsBusinessExternal)
					equal = false;
			}
			else if (Object1.IsBusinessExternal == null ^ Object1.IsBusinessExternal == null )
			{
				equal = false;
			}
			if (Object1.DataSourceID != null && Object2.DataSourceID != null )
			{
				if (Object1.DataSourceID != Object2.DataSourceID)
					equal = false;
			}
			else if (Object1.DataSourceID == null ^ Object1.DataSourceID == null )
			{
				equal = false;
			}
			if (Object1.DataSourceName != null && Object2.DataSourceName != null )
			{
				if (Object1.DataSourceName != Object2.DataSourceName)
					equal = false;
			}
			else if (Object1.DataSourceName == null ^ Object1.DataSourceName == null )
			{
				equal = false;
			}
			if (Object1.GeneralRemarks != null && Object2.GeneralRemarks != null )
			{
				if (Object1.GeneralRemarks != Object2.GeneralRemarks)
					equal = false;
			}
			else if (Object1.GeneralRemarks == null ^ Object1.GeneralRemarks == null )
			{
				equal = false;
			}
			if (Object1.GapType != null && Object2.GapType != null )
			{
				if (Object1.GapType != Object2.GapType)
					equal = false;
			}
			else if (Object1.GapType == null ^ Object1.GapType == null )
			{
				equal = false;
			}
			if (Object1.SeverityRating != null && Object2.SeverityRating != null )
			{
				if (Object1.SeverityRating != Object2.SeverityRating)
					equal = false;
			}
			else if (Object1.SeverityRating == null ^ Object1.SeverityRating == null )
			{
				equal = false;
			}
			if (Object1.ConfigurationID != null && Object2.ConfigurationID != null )
			{
				if (Object1.ConfigurationID != Object2.ConfigurationID)
					equal = false;
			}
			else if (Object1.ConfigurationID == null ^ Object1.ConfigurationID == null )
			{
				equal = false;
			}
			if (Object1.Make != null && Object2.Make != null )
			{
				if (Object1.Make != Object2.Make)
					equal = false;
			}
			else if (Object1.Make == null ^ Object1.Make == null )
			{
				equal = false;
			}
			if (Object1.Model != null && Object2.Model != null )
			{
				if (Object1.Model != Object2.Model)
					equal = false;
			}
			else if (Object1.Model == null ^ Object1.Model == null )
			{
				equal = false;
			}
			if (Object1.ModelNumber != null && Object2.ModelNumber != null )
			{
				if (Object1.ModelNumber != Object2.ModelNumber)
					equal = false;
			}
			else if (Object1.ModelNumber == null ^ Object1.ModelNumber == null )
			{
				equal = false;
			}
			if (Object1.SerialNumber != null && Object2.SerialNumber != null )
			{
				if (Object1.SerialNumber != Object2.SerialNumber)
					equal = false;
			}
			else if (Object1.SerialNumber == null ^ Object1.SerialNumber == null )
			{
				equal = false;
			}
			if (Object1.AssetNumber != null && Object2.AssetNumber != null )
			{
				if (Object1.AssetNumber != Object2.AssetNumber)
					equal = false;
			}
			else if (Object1.AssetNumber == null ^ Object1.AssetNumber == null )
			{
				equal = false;
			}
			if (Object1.DatePurchased != null && Object2.DatePurchased != null )
			{
				if (Object1.DatePurchased != Object2.DatePurchased)
					equal = false;
			}
			else if (Object1.DatePurchased == null ^ Object1.DatePurchased == null )
			{
				equal = false;
			}
			if (Object1.UnderWarranty != null && Object2.UnderWarranty != null )
			{
				if (Object1.UnderWarranty != Object2.UnderWarranty)
					equal = false;
			}
			else if (Object1.UnderWarranty == null ^ Object1.UnderWarranty == null )
			{
				equal = false;
			}
			if (Object1.IsManaged != null && Object2.IsManaged != null )
			{
				if (Object1.IsManaged != Object2.IsManaged)
					equal = false;
			}
			else if (Object1.IsManaged == null ^ Object1.IsManaged == null )
			{
				equal = false;
			}
			if (Object1.ContractNumber != null && Object2.ContractNumber != null )
			{
				if (Object1.ContractNumber != Object2.ContractNumber)
					equal = false;
			}
			else if (Object1.ContractNumber == null ^ Object1.ContractNumber == null )
			{
				equal = false;
			}
			if (Object1.NetworkAddress1 != null && Object2.NetworkAddress1 != null )
			{
				if (Object1.NetworkAddress1 != Object2.NetworkAddress1)
					equal = false;
			}
			else if (Object1.NetworkAddress1 == null ^ Object1.NetworkAddress1 == null )
			{
				equal = false;
			}
			if (Object1.NetworkAddress2 != null && Object2.NetworkAddress2 != null )
			{
				if (Object1.NetworkAddress2 != Object2.NetworkAddress2)
					equal = false;
			}
			else if (Object1.NetworkAddress2 == null ^ Object1.NetworkAddress2 == null )
			{
				equal = false;
			}
			if (Object1.NetworkAddress3 != null && Object2.NetworkAddress3 != null )
			{
				if (Object1.NetworkAddress3 != Object2.NetworkAddress3)
					equal = false;
			}
			else if (Object1.NetworkAddress3 == null ^ Object1.NetworkAddress3 == null )
			{
				equal = false;
			}
			if (Object1.NetworkAddress4 != null && Object2.NetworkAddress4 != null )
			{
				if (Object1.NetworkAddress4 != Object2.NetworkAddress4)
					equal = false;
			}
			else if (Object1.NetworkAddress4 == null ^ Object1.NetworkAddress4 == null )
			{
				equal = false;
			}
			if (Object1.NetworkAddress5 != null && Object2.NetworkAddress5 != null )
			{
				if (Object1.NetworkAddress5 != Object2.NetworkAddress5)
					equal = false;
			}
			else if (Object1.NetworkAddress5 == null ^ Object1.NetworkAddress5 == null )
			{
				equal = false;
			}
			if (Object1.CopyPPM != null && Object2.CopyPPM != null )
			{
				if (Object1.CopyPPM != Object2.CopyPPM)
					equal = false;
			}
			else if (Object1.CopyPPM == null ^ Object1.CopyPPM == null )
			{
				equal = false;
			}
			if (Object1.PrintPPM != null && Object2.PrintPPM != null )
			{
				if (Object1.PrintPPM != Object2.PrintPPM)
					equal = false;
			}
			else if (Object1.PrintPPM == null ^ Object1.PrintPPM == null )
			{
				equal = false;
			}
			if (Object1.IsColor != null && Object2.IsColor != null )
			{
				if (Object1.IsColor != Object2.IsColor)
					equal = false;
			}
			else if (Object1.IsColor == null ^ Object1.IsColor == null )
			{
				equal = false;
			}
			if (Object1.IsNetwork != null && Object2.IsNetwork != null )
			{
				if (Object1.IsNetwork != Object2.IsNetwork)
					equal = false;
			}
			else if (Object1.IsNetwork == null ^ Object1.IsNetwork == null )
			{
				equal = false;
			}
			if (Object1.ArchitectureStatus != null && Object2.ArchitectureStatus != null )
			{
				if (Object1.ArchitectureStatus != Object2.ArchitectureStatus)
					equal = false;
			}
			else if (Object1.ArchitectureStatus == null ^ Object1.ArchitectureStatus == null )
			{
				equal = false;
			}
			if (Object1.ArchitectureStatusDate != null && Object2.ArchitectureStatusDate != null )
			{
				if (Object1.ArchitectureStatusDate != Object2.ArchitectureStatusDate)
					equal = false;
			}
			else if (Object1.ArchitectureStatusDate == null ^ Object1.ArchitectureStatusDate == null )
			{
				equal = false;
			}
			if (Object1.DesignRationale != null && Object2.DesignRationale != null )
			{
				if (Object1.DesignRationale != Object2.DesignRationale)
					equal = false;
			}
			else if (Object1.DesignRationale == null ^ Object1.DesignRationale == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(METAView_PeripheralComponent_Listing entity, string propertyName)
		{
			switch (propertyName)
			{
				case "WorkspaceName":
					return entity.WorkspaceName;
				case "WorkspaceTypeId":
					return entity.WorkspaceTypeId;
				case "VCStatusID":
					return entity.VCStatusID;
				case "pkid":
					return entity.pkid;
				case "Machine":
					return entity.Machine;
				case "VCMachineID":
					return entity.VCMachineID;
				case "Name":
					return entity.Name;
				case "PeripheralComponentType":
					return entity.PeripheralComponentType;
				case "Description":
					return entity.Description;
				case "Abbreviation":
					return entity.Abbreviation;
				case "IsBusinessExternal":
					return entity.IsBusinessExternal;
				case "DataSourceID":
					return entity.DataSourceID;
				case "DataSourceName":
					return entity.DataSourceName;
				case "GeneralRemarks":
					return entity.GeneralRemarks;
				case "GapType":
					return entity.GapType;
				case "SeverityRating":
					return entity.SeverityRating;
				case "ConfigurationID":
					return entity.ConfigurationID;
				case "Make":
					return entity.Make;
				case "Model":
					return entity.Model;
				case "ModelNumber":
					return entity.ModelNumber;
				case "SerialNumber":
					return entity.SerialNumber;
				case "AssetNumber":
					return entity.AssetNumber;
				case "DatePurchased":
					return entity.DatePurchased;
				case "UnderWarranty":
					return entity.UnderWarranty;
				case "IsManaged":
					return entity.IsManaged;
				case "ContractNumber":
					return entity.ContractNumber;
				case "NetworkAddress1":
					return entity.NetworkAddress1;
				case "NetworkAddress2":
					return entity.NetworkAddress2;
				case "NetworkAddress3":
					return entity.NetworkAddress3;
				case "NetworkAddress4":
					return entity.NetworkAddress4;
				case "NetworkAddress5":
					return entity.NetworkAddress5;
				case "CopyPPM":
					return entity.CopyPPM;
				case "PrintPPM":
					return entity.PrintPPM;
				case "IsColor":
					return entity.IsColor;
				case "IsNetwork":
					return entity.IsNetwork;
				case "ArchitectureStatus":
					return entity.ArchitectureStatus;
				case "ArchitectureStatusDate":
					return entity.ArchitectureStatusDate;
				case "DesignRationale":
					return entity.DesignRationale;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as METAView_PeripheralComponent_Listing, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{39}{38}- WorkspaceName: {0}{38}- WorkspaceTypeId: {1}{38}- VCStatusID: {2}{38}- pkid: {3}{38}- Machine: {4}{38}- VCMachineID: {5}{38}- Name: {6}{38}- PeripheralComponentType: {7}{38}- Description: {8}{38}- Abbreviation: {9}{38}- IsBusinessExternal: {10}{38}- DataSourceID: {11}{38}- DataSourceName: {12}{38}- GeneralRemarks: {13}{38}- GapType: {14}{38}- SeverityRating: {15}{38}- ConfigurationID: {16}{38}- Make: {17}{38}- Model: {18}{38}- ModelNumber: {19}{38}- SerialNumber: {20}{38}- AssetNumber: {21}{38}- DatePurchased: {22}{38}- UnderWarranty: {23}{38}- IsManaged: {24}{38}- ContractNumber: {25}{38}- NetworkAddress1: {26}{38}- NetworkAddress2: {27}{38}- NetworkAddress3: {28}{38}- NetworkAddress4: {29}{38}- NetworkAddress5: {30}{38}- CopyPPM: {31}{38}- PrintPPM: {32}{38}- IsColor: {33}{38}- IsNetwork: {34}{38}- ArchitectureStatus: {35}{38}- ArchitectureStatusDate: {36}{38}- DesignRationale: {37}{38}", 
				this.WorkspaceName,
				(this.WorkspaceTypeId == null) ? string.Empty : this.WorkspaceTypeId.ToString(),
			     
				this.VCStatusID,
				this.pkid,
				this.Machine,
				(this.VCMachineID == null) ? string.Empty : this.VCMachineID.ToString(),
			     
				(this.Name == null) ? string.Empty : this.Name.ToString(),
			     
				(this.PeripheralComponentType == null) ? string.Empty : this.PeripheralComponentType.ToString(),
			     
				(this.Description == null) ? string.Empty : this.Description.ToString(),
			     
				(this.Abbreviation == null) ? string.Empty : this.Abbreviation.ToString(),
			     
				(this.IsBusinessExternal == null) ? string.Empty : this.IsBusinessExternal.ToString(),
			     
				(this.DataSourceID == null) ? string.Empty : this.DataSourceID.ToString(),
			     
				(this.DataSourceName == null) ? string.Empty : this.DataSourceName.ToString(),
			     
				(this.GeneralRemarks == null) ? string.Empty : this.GeneralRemarks.ToString(),
			     
				(this.GapType == null) ? string.Empty : this.GapType.ToString(),
			     
				(this.SeverityRating == null) ? string.Empty : this.SeverityRating.ToString(),
			     
				(this.ConfigurationID == null) ? string.Empty : this.ConfigurationID.ToString(),
			     
				(this.Make == null) ? string.Empty : this.Make.ToString(),
			     
				(this.Model == null) ? string.Empty : this.Model.ToString(),
			     
				(this.ModelNumber == null) ? string.Empty : this.ModelNumber.ToString(),
			     
				(this.SerialNumber == null) ? string.Empty : this.SerialNumber.ToString(),
			     
				(this.AssetNumber == null) ? string.Empty : this.AssetNumber.ToString(),
			     
				(this.DatePurchased == null) ? string.Empty : this.DatePurchased.ToString(),
			     
				(this.UnderWarranty == null) ? string.Empty : this.UnderWarranty.ToString(),
			     
				(this.IsManaged == null) ? string.Empty : this.IsManaged.ToString(),
			     
				(this.ContractNumber == null) ? string.Empty : this.ContractNumber.ToString(),
			     
				(this.NetworkAddress1 == null) ? string.Empty : this.NetworkAddress1.ToString(),
			     
				(this.NetworkAddress2 == null) ? string.Empty : this.NetworkAddress2.ToString(),
			     
				(this.NetworkAddress3 == null) ? string.Empty : this.NetworkAddress3.ToString(),
			     
				(this.NetworkAddress4 == null) ? string.Empty : this.NetworkAddress4.ToString(),
			     
				(this.NetworkAddress5 == null) ? string.Empty : this.NetworkAddress5.ToString(),
			     
				(this.CopyPPM == null) ? string.Empty : this.CopyPPM.ToString(),
			     
				(this.PrintPPM == null) ? string.Empty : this.PrintPPM.ToString(),
			     
				(this.IsColor == null) ? string.Empty : this.IsColor.ToString(),
			     
				(this.IsNetwork == null) ? string.Empty : this.IsNetwork.ToString(),
			     
				(this.ArchitectureStatus == null) ? string.Empty : this.ArchitectureStatus.ToString(),
			     
				(this.ArchitectureStatusDate == null) ? string.Empty : this.ArchitectureStatusDate.ToString(),
			     
				(this.DesignRationale == null) ? string.Empty : this.DesignRationale.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the METAView_PeripheralComponent_Listing columns.
	/// </summary>
	[Serializable]
	public enum METAView_PeripheralComponent_ListingColumn
	{
		/// <summary>
		/// WorkspaceName : 
		/// </summary>
		[EnumTextValue("WorkspaceName")]
		[ColumnEnum("WorkspaceName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 100)]
		WorkspaceName,
		/// <summary>
		/// WorkspaceTypeId : 
		/// </summary>
		[EnumTextValue("WorkspaceTypeId")]
		[ColumnEnum("WorkspaceTypeId", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		WorkspaceTypeId,
		/// <summary>
		/// VCStatusID : 
		/// </summary>
		[EnumTextValue("VCStatusID")]
		[ColumnEnum("VCStatusID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		VCStatusID,
		/// <summary>
		/// pkid : 
		/// </summary>
		[EnumTextValue("pkid")]
		[ColumnEnum("pkid", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		pkid,
		/// <summary>
		/// Machine : 
		/// </summary>
		[EnumTextValue("Machine")]
		[ColumnEnum("Machine", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		Machine,
		/// <summary>
		/// VCMachineID : 
		/// </summary>
		[EnumTextValue("VCMachineID")]
		[ColumnEnum("VCMachineID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		VCMachineID,
		/// <summary>
		/// Name : 
		/// </summary>
		[EnumTextValue("Name")]
		[ColumnEnum("Name", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Name,
		/// <summary>
		/// PeripheralComponentType : 
		/// </summary>
		[EnumTextValue("PeripheralComponentType")]
		[ColumnEnum("PeripheralComponentType", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		PeripheralComponentType,
		/// <summary>
		/// Description : 
		/// </summary>
		[EnumTextValue("Description")]
		[ColumnEnum("Description", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Description,
		/// <summary>
		/// Abbreviation : 
		/// </summary>
		[EnumTextValue("Abbreviation")]
		[ColumnEnum("Abbreviation", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Abbreviation,
		/// <summary>
		/// IsBusinessExternal : 
		/// </summary>
		[EnumTextValue("IsBusinessExternal")]
		[ColumnEnum("IsBusinessExternal", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		IsBusinessExternal,
		/// <summary>
		/// DataSourceID : 
		/// </summary>
		[EnumTextValue("DataSourceID")]
		[ColumnEnum("DataSourceID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		DataSourceID,
		/// <summary>
		/// DataSourceName : 
		/// </summary>
		[EnumTextValue("DataSourceName")]
		[ColumnEnum("DataSourceName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		DataSourceName,
		/// <summary>
		/// GeneralRemarks : 
		/// </summary>
		[EnumTextValue("GeneralRemarks")]
		[ColumnEnum("GeneralRemarks", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		GeneralRemarks,
		/// <summary>
		/// GapType : 
		/// </summary>
		[EnumTextValue("GapType")]
		[ColumnEnum("GapType", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		GapType,
		/// <summary>
		/// SeverityRating : 
		/// </summary>
		[EnumTextValue("SeverityRating")]
		[ColumnEnum("SeverityRating", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		SeverityRating,
		/// <summary>
		/// ConfigurationID : 
		/// </summary>
		[EnumTextValue("ConfigurationID")]
		[ColumnEnum("ConfigurationID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ConfigurationID,
		/// <summary>
		/// Make : 
		/// </summary>
		[EnumTextValue("Make")]
		[ColumnEnum("Make", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Make,
		/// <summary>
		/// Model : 
		/// </summary>
		[EnumTextValue("Model")]
		[ColumnEnum("Model", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		Model,
		/// <summary>
		/// ModelNumber : 
		/// </summary>
		[EnumTextValue("ModelNumber")]
		[ColumnEnum("ModelNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ModelNumber,
		/// <summary>
		/// SerialNumber : 
		/// </summary>
		[EnumTextValue("SerialNumber")]
		[ColumnEnum("SerialNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		SerialNumber,
		/// <summary>
		/// AssetNumber : 
		/// </summary>
		[EnumTextValue("AssetNumber")]
		[ColumnEnum("AssetNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		AssetNumber,
		/// <summary>
		/// DatePurchased : 
		/// </summary>
		[EnumTextValue("DatePurchased")]
		[ColumnEnum("DatePurchased", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		DatePurchased,
		/// <summary>
		/// UnderWarranty : 
		/// </summary>
		[EnumTextValue("UnderWarranty")]
		[ColumnEnum("UnderWarranty", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		UnderWarranty,
		/// <summary>
		/// IsManaged : 
		/// </summary>
		[EnumTextValue("IsManaged")]
		[ColumnEnum("IsManaged", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		IsManaged,
		/// <summary>
		/// ContractNumber : 
		/// </summary>
		[EnumTextValue("ContractNumber")]
		[ColumnEnum("ContractNumber", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ContractNumber,
		/// <summary>
		/// NetworkAddress1 : 
		/// </summary>
		[EnumTextValue("NetworkAddress1")]
		[ColumnEnum("NetworkAddress1", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		NetworkAddress1,
		/// <summary>
		/// NetworkAddress2 : 
		/// </summary>
		[EnumTextValue("NetworkAddress2")]
		[ColumnEnum("NetworkAddress2", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		NetworkAddress2,
		/// <summary>
		/// NetworkAddress3 : 
		/// </summary>
		[EnumTextValue("NetworkAddress3")]
		[ColumnEnum("NetworkAddress3", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		NetworkAddress3,
		/// <summary>
		/// NetworkAddress4 : 
		/// </summary>
		[EnumTextValue("NetworkAddress4")]
		[ColumnEnum("NetworkAddress4", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		NetworkAddress4,
		/// <summary>
		/// NetworkAddress5 : 
		/// </summary>
		[EnumTextValue("NetworkAddress5")]
		[ColumnEnum("NetworkAddress5", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		NetworkAddress5,
		/// <summary>
		/// CopyPPM : 
		/// </summary>
		[EnumTextValue("CopyPPM")]
		[ColumnEnum("CopyPPM", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		CopyPPM,
		/// <summary>
		/// PrintPPM : 
		/// </summary>
		[EnumTextValue("PrintPPM")]
		[ColumnEnum("PrintPPM", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		PrintPPM,
		/// <summary>
		/// IsColor : 
		/// </summary>
		[EnumTextValue("IsColor")]
		[ColumnEnum("IsColor", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		IsColor,
		/// <summary>
		/// IsNetwork : 
		/// </summary>
		[EnumTextValue("IsNetwork")]
		[ColumnEnum("IsNetwork", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		IsNetwork,
		/// <summary>
		/// ArchitectureStatus : 
		/// </summary>
		[EnumTextValue("ArchitectureStatus")]
		[ColumnEnum("ArchitectureStatus", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ArchitectureStatus,
		/// <summary>
		/// ArchitectureStatusDate : 
		/// </summary>
		[EnumTextValue("ArchitectureStatusDate")]
		[ColumnEnum("ArchitectureStatusDate", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		ArchitectureStatusDate,
		/// <summary>
		/// DesignRationale : 
		/// </summary>
		[EnumTextValue("DesignRationale")]
		[ColumnEnum("DesignRationale", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
		DesignRationale
	}//End enum

} // end namespace
