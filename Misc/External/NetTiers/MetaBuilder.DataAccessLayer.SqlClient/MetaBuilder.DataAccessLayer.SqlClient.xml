<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MetaBuilder.DataAccessLayer.SqlClient</name>
    </assembly>
    <members>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.UURI"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.UURI"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UURI objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UURI objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UURI objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UURI objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.GetBypkid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the URI_pk index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.UURI"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.UURI})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.UURI object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.UURI)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.UURI object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.UURI object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.UURI object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUURIProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.UURI)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.UURI object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.UURI object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Activity_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Activity_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Activity_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Activity_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Activity_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Activity_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Activity_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Activity_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Activity_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Activity_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Activity_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ApplicationInterface_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ApplicationInterface_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ApplicationInterface_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ApplicationInterface_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ApplicationInterface_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ApplicationInterface_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ApplicationInterface_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ApplicationInterface_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ApplicationInterface_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ApplicationInterface_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ApplicationInterface_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Assumption_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Assumption_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Assumption_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Assumption_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Assumption_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Assumption_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Assumption_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Assumption_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Assumption_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Assumption_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Assumption_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Attribute_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Attribute_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Attribute_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Attribute_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Attribute_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Attribute_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Attribute_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Attribute_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Attribute_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Attribute_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Attribute_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_BusinessCompetency_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_BusinessCompetency_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_BusinessCompetency_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_BusinessCompetency_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_BusinessCompetency_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_BusinessCompetency_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_BusinessCompetency_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_BusinessCompetency_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_BusinessCompetency_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessCompetency_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_BusinessCompetency_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_BusinessInterface_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_BusinessInterface_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_BusinessInterface_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_BusinessInterface_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_BusinessInterface_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_BusinessInterface_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_BusinessInterface_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_BusinessInterface_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_BusinessInterface_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_BusinessInterface_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_BusinessInterface_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CADReal_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_CADReal_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CADReal_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CADReal_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_CADReal_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CADReal_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_CADReal_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CADReal_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CADReal_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CADReal_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_CADReal_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CAD_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_CAD_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CAD_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CAD_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_CAD_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CAD_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_CAD_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CAD_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CAD_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CAD_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_CAD_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CategoryFactor_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_CategoryFactor_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CategoryFactor_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CategoryFactor_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_CategoryFactor_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CategoryFactor_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_CategoryFactor_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CategoryFactor_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CategoryFactor_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CategoryFactor_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_CategoryFactor_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Channel_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Channel_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Channel_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Channel_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Channel_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Channel_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Channel_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Channel_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Channel_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Channel_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Channel_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Competency_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Competency_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Competency_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Competency_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Competency_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Competency_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Competency_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Competency_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Competency_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Competency_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Competency_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ComputingComponent_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ComputingComponent_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ComputingComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ComputingComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ComputingComponent_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ComputingComponent_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ComputingComponent_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ComputingComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ComputingComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ComputingComponent_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ComputingComponent_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConditionalDescription_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ConditionalDescription_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConditionalDescription_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConditionalDescription_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ConditionalDescription_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConditionalDescription_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ConditionalDescription_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConditionalDescription_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConditionalDescription_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConditionalDescription_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ConditionalDescription_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Conditional_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Conditional_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Conditional_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Conditional_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Conditional_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Conditional_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Conditional_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Conditional_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Conditional_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Conditional_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Conditional_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Condition_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Condition_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Condition_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Condition_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Condition_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Condition_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Condition_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Condition_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Condition_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Condition_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Condition_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionSize_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ConnectionSize_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionSize_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionSize_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ConnectionSize_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionSize_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ConnectionSize_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionSize_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionSize_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSize_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ConnectionSize_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionSpeed_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ConnectionSpeed_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionSpeed_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionSpeed_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ConnectionSpeed_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionSpeed_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ConnectionSpeed_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionSpeed_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionSpeed_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionSpeed_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ConnectionSpeed_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionType_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ConnectionType_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionType_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionType_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ConnectionType_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionType_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ConnectionType_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionType_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ConnectionType_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ConnectionType_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ConnectionType_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Constraint_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Constraint_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Constraint_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Constraint_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Constraint_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Constraint_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Constraint_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Constraint_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Constraint_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Constraint_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Constraint_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CSF_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_CSF_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CSF_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CSF_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_CSF_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CSF_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_CSF_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CSF_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_CSF_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_CSF_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_CSF_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataAttribute_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataAttribute_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataAttribute_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataAttribute_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataAttribute_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataAttribute_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataAttribute_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataAttribute_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataAttribute_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataAttribute_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataAttribute_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataColumn_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataColumn_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataColumn_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataColumn_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataColumn_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataColumn_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataColumn_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataColumn_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataColumn_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataColumn_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataColumn_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataDomain_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataDomain_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataDomain_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataDomain_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataDomain_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataDomain_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataDomain_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataDomain_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataDomain_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataDomain_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataDomain_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataEntity_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataEntity_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataEntity_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataEntity_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataEntity_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataEntity_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataEntity_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataEntity_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataEntity_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataEntity_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataEntity_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataField_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataField_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataField_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataField_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataField_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataField_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataField_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataField_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataField_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataField_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataField_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataFlowIndicator_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataFlowIndicator_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataFlowIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataFlowIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataFlowIndicator_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataFlowIndicator_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataFlowIndicator_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataFlowIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataFlowIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataFlowIndicator_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataFlowIndicator_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataSchema_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataSchema_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataSchema_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataSchema_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataSchema_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataSchema_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataSchema_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataSchema_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataSchema_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSchema_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataSchema_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataSubjectArea_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataSubjectArea_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataSubjectArea_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataSubjectArea_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataSubjectArea_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataSubjectArea_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataSubjectArea_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataSubjectArea_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataSubjectArea_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataSubjectArea_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataSubjectArea_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataTable_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataTable_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataTable_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataTable_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataTable_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataTable_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataTable_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataTable_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataTable_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataTable_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataTable_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataValue_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataValue_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataValue_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataValue_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataValue_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataValue_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataValue_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataValue_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataValue_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataValue_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataValue_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataView_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataView_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataView_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataView_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataView_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataView_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DataView_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataView_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DataView_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DataView_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DataView_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DatedResponsibility_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DatedResponsibility_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DatedResponsibility_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DatedResponsibility_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DatedResponsibility_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DatedResponsibility_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DatedResponsibility_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DatedResponsibility_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DatedResponsibility_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DatedResponsibility_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DatedResponsibility_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DependencyDescription_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DependencyDescription_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DependencyDescription_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DependencyDescription_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DependencyDescription_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DependencyDescription_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_DependencyDescription_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DependencyDescription_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_DependencyDescription_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_DependencyDescription_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_DependencyDescription_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Driver_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Driver_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Driver_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Driver_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Driver_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Driver_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Driver_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Driver_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Driver_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Driver_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Driver_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Employee_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Employee_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Employee_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Employee_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Employee_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Employee_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Employee_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Employee_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Employee_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Employee_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Employee_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Entity_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Entity_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Entity_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Entity_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Entity_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Entity_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Entity_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Entity_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Entity_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Entity_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Entity_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_EnvironmentCategory_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_EnvironmentCategory_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_EnvironmentCategory_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_EnvironmentCategory_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_EnvironmentCategory_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_EnvironmentCategory_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_EnvironmentCategory_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_EnvironmentCategory_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_EnvironmentCategory_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_EnvironmentCategory_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_EnvironmentCategory_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Environment_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Environment_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Environment_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Environment_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Environment_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Environment_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Environment_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Environment_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Environment_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Environment_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Environment_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Event_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Event_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Event_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Event_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Event_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Event_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Event_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Event_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Event_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Event_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Event_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Exception_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Exception_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Exception_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Exception_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Exception_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Exception_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Exception_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Exception_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Exception_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Exception_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Exception_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ExtractionRule_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ExtractionRule_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ExtractionRule_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ExtractionRule_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ExtractionRule_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ExtractionRule_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ExtractionRule_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ExtractionRule_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ExtractionRule_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ExtractionRule_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ExtractionRule_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_FlowDescription_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_FlowDescription_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_FlowDescription_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_FlowDescription_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_FlowDescription_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_FlowDescription_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_FlowDescription_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_FlowDescription_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_FlowDescription_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FlowDescription_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_FlowDescription_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_FunctionalDependency_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_FunctionalDependency_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_FunctionalDependency_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_FunctionalDependency_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_FunctionalDependency_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_FunctionalDependency_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_FunctionalDependency_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_FunctionalDependency_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_FunctionalDependency_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_FunctionalDependency_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_FunctionalDependency_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Function_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Function_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Function_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Function_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Function_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Function_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Function_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Function_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Function_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Function_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Function_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_GatewayDescription_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_GatewayDescription_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_GatewayDescription_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_GatewayDescription_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_GatewayDescription_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_GatewayDescription_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_GatewayDescription_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_GatewayDescription_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_GatewayDescription_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GatewayDescription_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_GatewayDescription_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Gateway_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Gateway_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Gateway_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Gateway_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Gateway_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Gateway_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Gateway_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Gateway_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Gateway_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Gateway_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Gateway_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_GovernanceMechanism_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_GovernanceMechanism_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_GovernanceMechanism_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_GovernanceMechanism_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_GovernanceMechanism_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_GovernanceMechanism_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_GovernanceMechanism_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_GovernanceMechanism_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_GovernanceMechanism_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_GovernanceMechanism_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_GovernanceMechanism_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Implication_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Implication_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Implication_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Implication_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Implication_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Implication_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Implication_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Implication_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Implication_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Implication_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Implication_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Iteration_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Iteration_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Iteration_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Iteration_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Iteration_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Iteration_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Iteration_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Iteration_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Iteration_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Iteration_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Iteration_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ITInfrastructureEnvironment_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ITInfrastructureEnvironment_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ITInfrastructureEnvironment_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ITInfrastructureEnvironment_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ITInfrastructureEnvironment_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ITInfrastructureEnvironment_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ITInfrastructureEnvironment_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ITInfrastructureEnvironment_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ITInfrastructureEnvironment_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ITInfrastructureEnvironment_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ITInfrastructureEnvironment_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_JobCompetency_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_JobCompetency_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_JobCompetency_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_JobCompetency_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_JobCompetency_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_JobCompetency_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_JobCompetency_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_JobCompetency_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_JobCompetency_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobCompetency_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_JobCompetency_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_JobPosition_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_JobPosition_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_JobPosition_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_JobPosition_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_JobPosition_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_JobPosition_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_JobPosition_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_JobPosition_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_JobPosition_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_JobPosition_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_JobPosition_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Job_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Job_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Job_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Job_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Job_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Job_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Job_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Job_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Job_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Job_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Job_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationAssociation_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LocationAssociation_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationAssociation_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationAssociation_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LocationAssociation_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationAssociation_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LocationAssociation_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationAssociation_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationAssociation_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationAssociation_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LocationAssociation_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationScheme_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LocationScheme_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationScheme_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationScheme_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LocationScheme_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationScheme_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LocationScheme_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationScheme_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationScheme_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationScheme_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LocationScheme_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationUnit_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LocationUnit_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationUnit_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationUnit_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LocationUnit_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationUnit_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LocationUnit_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationUnit_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LocationUnit_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LocationUnit_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LocationUnit_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Location_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Location_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Location_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Location_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Location_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Location_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Location_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Location_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Location_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Location_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Location_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalInformationArtefact_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LogicalInformationArtefact_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalInformationArtefact_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalInformationArtefact_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LogicalInformationArtefact_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalInformationArtefact_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LogicalInformationArtefact_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalInformationArtefact_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalInformationArtefact_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalInformationArtefact_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LogicalInformationArtefact_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalITInfrastructureComponent_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LogicalITInfrastructureComponent_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalITInfrastructureComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalITInfrastructureComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LogicalITInfrastructureComponent_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalITInfrastructureComponent_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LogicalITInfrastructureComponent_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalITInfrastructureComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalITInfrastructureComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LogicalITInfrastructureComponent_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalSoftwareComponent_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LogicalSoftwareComponent_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalSoftwareComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalSoftwareComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LogicalSoftwareComponent_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalSoftwareComponent_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_LogicalSoftwareComponent_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalSoftwareComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_LogicalSoftwareComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_LogicalSoftwareComponent_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_LogicalSoftwareComponent_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Logic_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Logic_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Logic_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Logic_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Logic_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Logic_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Logic_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Logic_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Logic_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Logic_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Logic_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MarketSegment_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_MarketSegment_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MarketSegment_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MarketSegment_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_MarketSegment_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MarketSegment_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_MarketSegment_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MarketSegment_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MarketSegment_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MarketSegment_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_MarketSegment_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MeasurementItem_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_MeasurementItem_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MeasurementItem_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MeasurementItem_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_MeasurementItem_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MeasurementItem_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_MeasurementItem_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MeasurementItem_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MeasurementItem_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MeasurementItem_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_MeasurementItem_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Measure_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Measure_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Measure_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Measure_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Measure_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Measure_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Measure_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Measure_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Measure_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Measure_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Measure_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ModelReal_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ModelReal_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ModelReal_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ModelReal_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ModelReal_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ModelReal_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ModelReal_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ModelReal_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ModelReal_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ModelReal_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ModelReal_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Model_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Model_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Model_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Model_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Model_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Model_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Model_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Model_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Model_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Model_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Model_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MutuallyExclusiveIndicator_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_MutuallyExclusiveIndicator_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MutuallyExclusiveIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MutuallyExclusiveIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_MutuallyExclusiveIndicator_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MutuallyExclusiveIndicator_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_MutuallyExclusiveIndicator_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MutuallyExclusiveIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_MutuallyExclusiveIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_MutuallyExclusiveIndicator_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_NetworkComponent_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_NetworkComponent_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_NetworkComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_NetworkComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_NetworkComponent_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_NetworkComponent_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_NetworkComponent_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_NetworkComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_NetworkComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_NetworkComponent_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_NetworkComponent_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Network_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Network_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Network_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Network_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Network_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Network_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Network_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Network_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Network_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Network_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Network_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Object_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Object_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Object_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Object_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Object_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Object_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Object_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Object_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Object_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Object_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Object_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_OrganizationalUnit_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_OrganizationalUnit_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_OrganizationalUnit_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_OrganizationalUnit_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_OrganizationalUnit_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_OrganizationalUnit_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_OrganizationalUnit_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_OrganizationalUnit_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_OrganizationalUnit_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_OrganizationalUnit_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_OrganizationalUnit_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PeripheralComponent_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_PeripheralComponent_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PeripheralComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PeripheralComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_PeripheralComponent_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PeripheralComponent_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_PeripheralComponent_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PeripheralComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PeripheralComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PeripheralComponent_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_PeripheralComponent_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Peripheral_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Peripheral_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Peripheral_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Peripheral_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Peripheral_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Peripheral_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Peripheral_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Peripheral_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Peripheral_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Peripheral_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Peripheral_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Person_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Person_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Person_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Person_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Person_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Person_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Person_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Person_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Person_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Person_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Person_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalDataComponent_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_PhysicalDataComponent_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalDataComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalDataComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_PhysicalDataComponent_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalDataComponent_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_PhysicalDataComponent_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalDataComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalDataComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalDataComponent_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_PhysicalDataComponent_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalInformationArtefact_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_PhysicalInformationArtefact_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalInformationArtefact_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalInformationArtefact_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_PhysicalInformationArtefact_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalInformationArtefact_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_PhysicalInformationArtefact_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalInformationArtefact_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalInformationArtefact_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalInformationArtefact_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_PhysicalInformationArtefact_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalSoftwareComponent_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_PhysicalSoftwareComponent_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalSoftwareComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalSoftwareComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_PhysicalSoftwareComponent_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalSoftwareComponent_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_PhysicalSoftwareComponent_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalSoftwareComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PhysicalSoftwareComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PhysicalSoftwareComponent_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_PhysicalSoftwareComponent_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Position_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Position_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Position_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Position_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Position_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Position_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Position_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Position_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Position_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Position_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Position_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PrimaryDataSourceIndicator_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_PrimaryDataSourceIndicator_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PrimaryDataSourceIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PrimaryDataSourceIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_PrimaryDataSourceIndicator_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PrimaryDataSourceIndicator_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_PrimaryDataSourceIndicator_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PrimaryDataSourceIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_PrimaryDataSourceIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_PrimaryDataSourceIndicator_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ProbabilityofRealization_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ProbabilityofRealization_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ProbabilityofRealization_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ProbabilityofRealization_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ProbabilityofRealization_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ProbabilityofRealization_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ProbabilityofRealization_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ProbabilityofRealization_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ProbabilityofRealization_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbabilityofRealization_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ProbabilityofRealization_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ProbOfRealization_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ProbOfRealization_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ProbOfRealization_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ProbOfRealization_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ProbOfRealization_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ProbOfRealization_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ProbOfRealization_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ProbOfRealization_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ProbOfRealization_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ProbOfRealization_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ProbOfRealization_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Process_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Process_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Process_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Process_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Process_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Process_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Process_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Process_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Process_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Process_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Process_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Rationale_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Rationale_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Rationale_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Rationale_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Rationale_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Rationale_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Rationale_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Rationale_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Rationale_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Rationale_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Rationale_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Report_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Report_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Report_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Report_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Report_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Report_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Report_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Report_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Report_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Report_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Report_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ResourceType_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ResourceType_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ResourceType_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ResourceType_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ResourceType_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ResourceType_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_ResourceType_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ResourceType_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_ResourceType_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_ResourceType_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_ResourceType_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Resource_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Resource_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Resource_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Resource_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Resource_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Resource_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Resource_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Resource_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Resource_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Resource_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Resource_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Responsibility_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Responsibility_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Responsibility_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Responsibility_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Responsibility_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Responsibility_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Responsibility_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Responsibility_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Responsibility_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Responsibility_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Responsibility_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Risk_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Risk_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Risk_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Risk_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Risk_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Risk_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Risk_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Risk_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Risk_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Risk_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Risk_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Role_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Role_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Role_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Role_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Role_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Role_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Role_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Role_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Role_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Role_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Role_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Scenario_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Scenario_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Scenario_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Scenario_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Scenario_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Scenario_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Scenario_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Scenario_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Scenario_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Scenario_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Scenario_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SecurityClassification_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_SecurityClassification_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SecurityClassification_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SecurityClassification_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_SecurityClassification_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SecurityClassification_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_SecurityClassification_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SecurityClassification_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SecurityClassification_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SecurityClassification_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_SecurityClassification_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SelectorAttribute_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_SelectorAttribute_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SelectorAttribute_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SelectorAttribute_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_SelectorAttribute_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SelectorAttribute_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_SelectorAttribute_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SelectorAttribute_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SelectorAttribute_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SelectorAttribute_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_SelectorAttribute_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Skill_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Skill_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Skill_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Skill_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Skill_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Skill_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Skill_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Skill_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Skill_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Skill_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Skill_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Software_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Software_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Software_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Software_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Software_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Software_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Software_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Software_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Software_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Software_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Software_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Stakeholder_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Stakeholder_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Stakeholder_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Stakeholder_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Stakeholder_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Stakeholder_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Stakeholder_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Stakeholder_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Stakeholder_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Stakeholder_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Stakeholder_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StatusIndicator_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_StatusIndicator_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StatusIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StatusIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_StatusIndicator_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StatusIndicator_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_StatusIndicator_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StatusIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StatusIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StatusIndicator_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_StatusIndicator_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StorageComponent_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_StorageComponent_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StorageComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StorageComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_StorageComponent_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StorageComponent_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_StorageComponent_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StorageComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StorageComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StorageComponent_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_StorageComponent_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StrategicStatement_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_StrategicStatement_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StrategicStatement_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StrategicStatement_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_StrategicStatement_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StrategicStatement_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_StrategicStatement_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StrategicStatement_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StrategicStatement_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicStatement_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_StrategicStatement_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StrategicTheme_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_StrategicTheme_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StrategicTheme_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StrategicTheme_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_StrategicTheme_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StrategicTheme_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_StrategicTheme_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StrategicTheme_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_StrategicTheme_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_StrategicTheme_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_StrategicTheme_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SubsetIndicator_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_SubsetIndicator_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SubsetIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SubsetIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_SubsetIndicator_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SubsetIndicator_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_SubsetIndicator_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SubsetIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SubsetIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SubsetIndicator_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_SubsetIndicator_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SystemComponent_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_SystemComponent_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SystemComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SystemComponent_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_SystemComponent_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SystemComponent_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_SystemComponent_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SystemComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_SystemComponent_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_SystemComponent_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_SystemComponent_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Sys_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Sys_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Sys_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Sys_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Sys_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Sys_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Sys_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Sys_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Sys_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Sys_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Sys_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Task_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Task_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Task_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Task_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Task_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Task_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_Task_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Task_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_Task_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_Task_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_Task_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeDifference_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_TimeDifference_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeDifference_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeDifference_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_TimeDifference_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeDifference_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_TimeDifference_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeDifference_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeDifference_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeDifference_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_TimeDifference_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeIndicator_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_TimeIndicator_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeIndicator_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_TimeIndicator_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeIndicator_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_TimeIndicator_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeIndicator_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeIndicator_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_TimeIndicator_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeReference_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_TimeReference_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeReference_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeReference_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_TimeReference_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeReference_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_TimeReference_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeReference_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeReference_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeReference_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_TimeReference_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeScheme_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_TimeScheme_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeScheme_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeScheme_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_TimeScheme_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeScheme_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_TimeScheme_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeScheme_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeScheme_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeScheme_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_TimeScheme_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeUnit_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_TimeUnit_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeUnit_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeUnit_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_TimeUnit_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeUnit_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_TimeUnit_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeUnit_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_TimeUnit_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_TimeUnit_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_TimeUnit_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_WorkPackage_Listing"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_WorkPackage_Listing objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_WorkPackage_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_WorkPackage_Listing objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_ListingProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_WorkPackage_Listing objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.METAView_WorkPackage_Retrieval"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the METAView_WorkPackage_Retrieval objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_WorkPackage_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of METAView_WorkPackage_Retrieval objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMETAView_WorkPackage_RetrievalProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of METAView_WorkPackage_Retrieval objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.vw_FieldValue"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the vw_FieldValue objects.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of vw_FieldValue objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase.Get(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of vw_FieldValue objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.Sqlvw_FieldValueProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of vw_FieldValue objects.</returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.VCStatus"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.VCStatus"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.VCStatus objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.VCStatus objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.VCStatus objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.VCStatus objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.GetBypkid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GraphFileStatus index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.VCStatus"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.GetByName(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_GraphFileStatus index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_name"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.VCStatus"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.VCStatus})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.VCStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.VCStatus)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.VCStatus object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.VCStatus object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.VCStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlVCStatusProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.VCStatus)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.VCStatus object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.VCStatus object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_domainDefinitionID">. Primary Key.</param>	
            <param name="_possibleValue">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.GetByDomainDefinitionID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_DomainDefinitionPossibleValue_DomainDefinition key.
            	FK_DomainDefinitionPossibleValue_DomainDefinition Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_domainDefinitionID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.GetByURI_ID(MetaBuilder.DataAccessLayer.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_DomainDefinitionPossibleValue_URI key.
            	FK_DomainDefinitionPossibleValue_URI Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_uRI_ID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.GetByDomainDefinitionIDPossibleValue(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DomainDefinitionPossibleValue index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_domainDefinitionID"></param>
            <param name="_possibleValue"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionPossibleValueProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Workspace"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Workspace"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.GetByUserIDFromUserPermission(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Workspace objects from the datasource by UserID in the
            	UserPermission table. Table Workspace is related to table User
            	through the (M:N) relationship defined in the UserPermission table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_userID"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Workspace objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_name">. Primary Key.</param>	
            <param name="_WorkspaceTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Workspace objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Workspace objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Workspace objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Workspace objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.GetByWorkspaceTypeId(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Workspace_WorkspaceType key.
            	FK_Workspace_WorkspaceType Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_WorkspaceTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Workspace objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.GetByNameWorkspaceTypeId(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Workspace index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_name"></param>
            <param name="_WorkspaceTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.Workspace"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.Workspace})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Workspace object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Workspace)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.Workspace object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Workspace object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Workspace object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Workspace)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Workspace object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.Workspace object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.ClassType"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.ClassType"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_classType">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.GetByClassType(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ClassType index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_classType"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.ClassType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.ClassType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.ClassType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.ClassType)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.ClassType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.ClassType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.ClassType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassTypeProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.ClassType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.ClassType object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.ClassType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.WorkspaceType"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.WorkspaceType"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.WorkspaceType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.WorkspaceType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.WorkspaceType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.WorkspaceType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.GetBypkid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_WorkspaceType index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.WorkspaceType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.GetByDescription(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_WorkspaceType index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_description"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.WorkspaceType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.WorkspaceType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.WorkspaceType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.WorkspaceType)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.WorkspaceType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.WorkspaceType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.WorkspaceType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlWorkspaceTypeProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.WorkspaceType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.WorkspaceType object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.WorkspaceType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.User"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.User"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.GetByWorkspaceNameWorkspaceTypeIdFromUserPermission(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets User objects from the datasource by WorkspaceName in the
            	UserPermission table. Table User is related to table Workspace
            	through the (M:N) relationship defined in the UserPermission table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_workspaceName"></param>
            <param name="_WorkspaceTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of User objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.User objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.User objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.User objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.User objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.GetBypkid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_User index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.User"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.User})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.User object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.User)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.User object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.User object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.User object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.User)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.User object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.User object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.GraphFile"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.GraphFile"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.GetByCAidObjectIDChildObjectIDObjectMachineChildObjectMachineFromGraphFileAssociation(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets GraphFile objects from the datasource by CAid in the
            	GraphFileAssociation table. Table GraphFile is related to table ObjectAssociation
            	through the (M:N) relationship defined in the GraphFileAssociation table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_cAid"></param>
            <param name="_objectID"></param>
            <param name="_childObjectID"></param>
            <param name="_objectMachine"></param>
            <param name="_childObjectMachine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of GraphFile objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.GetByMetaObjectIDMachineIDFromGraphFileObject(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets GraphFile objects from the datasource by MetaObjectID in the
            	GraphFileObject table. Table GraphFile is related to table MetaObject
            	through the (M:N) relationship defined in the GraphFileObject table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_metaObjectID"></param>
            <param name="_machineID"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of GraphFile objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="_machine">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFile objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFile objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFile objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFile objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.GetByVCStatusID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GraphFile_VCStatus key.
            	FK_GraphFile_VCStatus Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_VCStatusID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFile objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.GetByFileTypeID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GraphFile_FileType key.
            	FK_GraphFile_FileType Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_fileTypeID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFile objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.GetByWorkspaceNameWorkspaceTypeId(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GraphFile_Workspace key.
            	FK_GraphFile_Workspace Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_workspaceName"></param>
            <param name="_WorkspaceTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFile objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.GetBypkidMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Version index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="_machine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.GraphFile"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.GraphFile})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.GraphFile object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.GraphFile)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.GraphFile object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.GraphFile object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.GraphFile object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.GraphFile)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.GraphFile object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.GraphFile object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Class"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Class"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.GetByCAidFromAllowedArtifact(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Class objects from the datasource by CAid in the
            	AllowedArtifact table. Table Class is related to table ClassAssociation
            	through the (M:N) relationship defined in the AllowedArtifact table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_cAid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Class objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_name">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Class objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Class objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Class objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Class objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.GetByClassType(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Class_ClassType key.
            	FK_Class_ClassType Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_classType"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Class objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.GetByName(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Class index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_name"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.Class"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.Class})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Class object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Class)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.Class object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Class object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Class object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Class)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Class object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.Class object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.MetaObject"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.MetaObject"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetByFieldIDFromObjectFieldValue(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets MetaObject objects from the datasource by FieldID in the
            	ObjectFieldValue table. Table MetaObject is related to table Field
            	through the (M:N) relationship defined in the ObjectFieldValue table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_fieldID"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of MetaObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetByCAidFromObjectAssociation(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets MetaObject objects from the datasource by CAid in the
            	ObjectAssociation table. Table MetaObject is related to table ClassAssociation
            	through the (M:N) relationship defined in the ObjectAssociation table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_cAid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of MetaObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetByChildObjectIDChildObjectMachineFromObjectAssociation(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets MetaObject objects from the datasource by ChildObjectID in the
            	ObjectAssociation table. Table MetaObject is related to table MetaObject
            	through the (M:N) relationship defined in the ObjectAssociation table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_childObjectID"></param>
            <param name="_childObjectMachine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of MetaObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetByObjectIDObjectMachineFromObjectAssociation(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets MetaObject objects from the datasource by ObjectID in the
            	ObjectAssociation table. Table MetaObject is related to table MetaObject
            	through the (M:N) relationship defined in the ObjectAssociation table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_objectID"></param>
            <param name="_objectMachine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of MetaObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetByGraphFileIDGraphFileMachineFromGraphFileObject(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets MetaObject objects from the datasource by GraphFileID in the
            	GraphFileObject table. Table MetaObject is related to table GraphFile
            	through the (M:N) relationship defined in the GraphFileObject table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_graphFileID"></param>
            <param name="_graphFileMachine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of MetaObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="_machine">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.MetaObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.MetaObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.MetaObject objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.MetaObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetByClass(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Object_Class key.
            	FK_Object_Class Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_class"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.MetaObject objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetByUserID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Object_User key.
            	FK_Object_User Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_userID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.MetaObject objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetByVCStatusID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_MetaObject_VCStatus key.
            	FK_MetaObject_VCStatus Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_VCStatusID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.MetaObject objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetByWorkspaceNameWorkspaceTypeId(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_MetaObject_Workspace key.
            	FK_MetaObject_Workspace Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_workspaceName"></param>
            <param name="_WorkspaceTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.MetaObject objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.GetBypkidMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MetaObject index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="_machine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.MetaObject"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.MetaObject})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.MetaObject object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.MetaObject)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.MetaObject object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.MetaObject object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.MetaObject object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlMetaObjectProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.MetaObject)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.MetaObject object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.MetaObject object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.UserPermission"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.UserPermission"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_userID">. Primary Key.</param>	
            <param name="_workspaceName">. Primary Key.</param>	
            <param name="_WorkspaceTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UserPermission objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UserPermission objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UserPermission objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UserPermission objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.GetByUserID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_UserPermission_User key.
            	FK_UserPermission_User Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_userID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UserPermission objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.GetByPermissionID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_UserPermission_Permission key.
            	FK_UserPermission_Permission Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_permissionID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UserPermission objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.GetByWorkspaceNameWorkspaceTypeId(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_UserPermission_Workspace key.
            	FK_UserPermission_Workspace Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_workspaceName"></param>
            <param name="_WorkspaceTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.UserPermission objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.GetByUserIDWorkspaceNameWorkspaceTypeId(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserPermission index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_userID"></param>
            <param name="_workspaceName"></param>
            <param name="_WorkspaceTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.UserPermission"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.UserPermission})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.UserPermission object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.UserPermission)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.UserPermission object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.UserPermission object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.UserPermission object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlUserPermissionProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.UserPermission)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.UserPermission object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.UserPermission object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Config"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Config"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_configName">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Config objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Config objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Config objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Config objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.GetByConfigName(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Config index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_configName"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.Config"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.Config})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Config object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Config)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.Config object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Config object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Config object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlConfigProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Config)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Config object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.Config object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.AssociationType"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.AssociationType"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.AssociationType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.AssociationType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.AssociationType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.AssociationType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.GetBypkid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_MappingType index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.AssociationType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.GetByName(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the uq_assocname index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_name"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.AssociationType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.AssociationType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.AssociationType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.AssociationType)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.AssociationType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.AssociationType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.AssociationType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAssociationTypeProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.AssociationType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.AssociationType object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.AssociationType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.ClassAssociation"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.ClassAssociation"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.GetByObjectIDObjectMachineFromObjectAssociation(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ClassAssociation objects from the datasource by ObjectID in the
            	ObjectAssociation table. Table ClassAssociation is related to table MetaObject
            	through the (M:N) relationship defined in the ObjectAssociation table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_objectID"></param>
            <param name="_objectMachine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of ClassAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.GetByChildObjectIDChildObjectMachineFromObjectAssociation(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ClassAssociation objects from the datasource by ChildObjectID in the
            	ObjectAssociation table. Table ClassAssociation is related to table MetaObject
            	through the (M:N) relationship defined in the ObjectAssociation table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_childObjectID"></param>
            <param name="_childObjectMachine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of ClassAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.GetByClassFromAllowedArtifact(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ClassAssociation objects from the datasource by Class in the
            	AllowedArtifact table. Table ClassAssociation is related to table Class
            	through the (M:N) relationship defined in the AllowedArtifact table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_class"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of ClassAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_cAid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.GetByParentClass(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AllowedClassRelationship_Class key.
            	FK_AllowedClassRelationship_Class Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_parentClass"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.GetByChildClass(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AllowedClassRelationship_Class1 key.
            	FK_AllowedClassRelationship_Class1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_childClass"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.GetByAssociationTypeID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AllowedClassRelationship_RelationshipType key.
            	FK_AllowedClassRelationship_RelationshipType Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_associationTypeID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.GetByAssociationObjectClass(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ClassAssociation_Class key.
            	FK_ClassAssociation_Class Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_associationObjectClass"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ClassAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.GetByCAid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ClassAssociation index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_cAid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.ClassAssociation"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.ClassAssociation})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.ClassAssociation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.ClassAssociation)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.ClassAssociation object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.ClassAssociation object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.ClassAssociation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlClassAssociationProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.ClassAssociation)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.ClassAssociation object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.ClassAssociation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.ObjectAssociation"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.ObjectAssociation"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.GetByGraphFileIDGraphFileMachineFromGraphFileAssociation(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets ObjectAssociation objects from the datasource by GraphFileID in the
            	GraphFileAssociation table. Table ObjectAssociation is related to table GraphFile
            	through the (M:N) relationship defined in the GraphFileAssociation table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_graphFileID"></param>
            <param name="_graphFileMachine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of ObjectAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_cAid">. Primary Key.</param>	
            <param name="_objectID">. Primary Key.</param>	
            <param name="_childObjectID">. Primary Key.</param>	
            <param name="_objectMachine">. Primary Key.</param>	
            <param name="_childObjectMachine">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.GetByVCStatusID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ObjectAssociation_VCStatus key.
            	FK_ObjectAssociation_VCStatus Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_VCStatusID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.GetByCAid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ObjectAssociation_ClassAssociation key.
            	FK_ObjectAssociation_ClassAssociation Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_cAid"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.GetByObjectIDObjectMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ObjectAssociation_MetaObject key.
            	FK_ObjectAssociation_MetaObject Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_objectID"></param>
            <param name="_objectMachine"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.GetByChildObjectIDChildObjectMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ObjectAssociation_MetaObject1 key.
            	FK_ObjectAssociation_MetaObject1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_childObjectID"></param>
            <param name="_childObjectMachine"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.GetByCAidObjectIDChildObjectIDObjectMachineChildObjectMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ObjectRelationship index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_cAid"></param>
            <param name="_objectID"></param>
            <param name="_childObjectID"></param>
            <param name="_objectMachine"></param>
            <param name="_childObjectMachine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.ObjectAssociation"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.ObjectAssociation})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.ObjectAssociation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.ObjectAssociation)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.ObjectAssociation object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.ObjectAssociation object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.ObjectAssociation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectAssociationProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.ObjectAssociation)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.ObjectAssociation object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.ObjectAssociation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.FileType"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.FileType"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.FileType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.FileType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.FileType objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.FileType objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.GetBypkid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_FileType index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.FileType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.GetByName(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_FileType index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_name"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.FileType"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.FileType})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.FileType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.FileType)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.FileType object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.FileType object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.FileType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFileTypeProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.FileType)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.FileType object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.FileType object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.ObjectFieldValue"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.ObjectFieldValue"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_objectID">. Primary Key.</param>	
            <param name="_fieldID">. Primary Key.</param>	
            <param name="_machineID">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectFieldValue objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectFieldValue objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectFieldValue objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectFieldValue objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.GetByFieldID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ObjectFieldValue_Field key.
            	FK_ObjectFieldValue_Field Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_fieldID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectFieldValue objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.GetByObjectIDMachineID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_ObjectFieldValue_MetaObject key.
            	FK_ObjectFieldValue_MetaObject Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_objectID"></param>
            <param name="_machineID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.ObjectFieldValue objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.GetByObjectIDFieldIDMachineID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ObjectFieldValue index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_objectID"></param>
            <param name="_fieldID"></param>
            <param name="_machineID"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.ObjectFieldValue"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.GetByValueString(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ObjectFieldValue index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_valueString"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.GetByValueInt(MetaBuilder.DataAccessLayer.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_ObjectFieldValue_1 index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_valueInt"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.ObjectFieldValue})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.ObjectFieldValue object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.ObjectFieldValue)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.ObjectFieldValue object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.ObjectFieldValue object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.ObjectFieldValue object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlObjectFieldValueProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.ObjectFieldValue)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.ObjectFieldValue object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.ObjectFieldValue object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.GraphFileAssociation"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.GraphFileAssociation"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_graphFileID">. Primary Key.</param>	
            <param name="_graphFileMachine">. Primary Key.</param>	
            <param name="_childObjectMachine">. Primary Key.</param>	
            <param name="_cAid">. Primary Key.</param>	
            <param name="_objectID">. Primary Key.</param>	
            <param name="_childObjectID">. Primary Key.</param>	
            <param name="_objectMachine">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileAssociation objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.GetByGraphFileIDGraphFileMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GraphFileAssociation_GraphFile key.
            	FK_GraphFileAssociation_GraphFile Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_graphFileID"></param>
            <param name="_graphFileMachine"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.GetByCAidObjectIDChildObjectIDObjectMachineChildObjectMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GraphFileAssociation_ObjectAssociation key.
            	FK_GraphFileAssociation_ObjectAssociation Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_cAid"></param>
            <param name="_objectID"></param>
            <param name="_childObjectID"></param>
            <param name="_objectMachine"></param>
            <param name="_childObjectMachine"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileAssociation objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.GetByGraphFileIDGraphFileMachineChildObjectMachineCAidObjectIDChildObjectIDObjectMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GraphFileAssociation index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_graphFileID"></param>
            <param name="_graphFileMachine"></param>
            <param name="_childObjectMachine"></param>
            <param name="_cAid"></param>
            <param name="_objectID"></param>
            <param name="_childObjectID"></param>
            <param name="_objectMachine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.GraphFileAssociation"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.GraphFileAssociation})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.GraphFileAssociation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.GraphFileAssociation)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.GraphFileAssociation object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.GraphFileAssociation object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.GraphFileAssociation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileAssociationProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.GraphFileAssociation)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.GraphFileAssociation object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.GraphFileAssociation object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.AllowedArtifact"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.AllowedArtifact"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_cAid">. Primary Key.</param>	
            <param name="_class">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.AllowedArtifact objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.AllowedArtifact objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.AllowedArtifact objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.AllowedArtifact objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.GetByClass(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AllowedArtifact_Class key.
            	FK_AllowedArtifact_Class Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_class"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.AllowedArtifact objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.GetByCAid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AllowedArtifact_ClassAssociation key.
            	FK_AllowedArtifact_ClassAssociation Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_cAid"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.AllowedArtifact objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.GetByCAidClass(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AllowedArtifact index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_cAid"></param>
            <param name="_class"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.AllowedArtifact"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.AllowedArtifact})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.AllowedArtifact object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.AllowedArtifact)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.AllowedArtifact object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.AllowedArtifact object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.AllowedArtifact object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlAllowedArtifactProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.AllowedArtifact)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.AllowedArtifact object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.AllowedArtifact object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.DomainDefinition"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.DomainDefinition"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.DomainDefinition objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.DomainDefinition objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.DomainDefinition objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.DomainDefinition objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.GetBypkid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DomainDefinition index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.DomainDefinition"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.DomainDefinition})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.DomainDefinition object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.DomainDefinition)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.DomainDefinition object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.DomainDefinition object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.DomainDefinition object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlDomainDefinitionProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.DomainDefinition)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.DomainDefinition object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.DomainDefinition object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Artifact"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Artifact"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_artifactID">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Artifact objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Artifact objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Artifact objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Artifact objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.GetByObjectIDObjectMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Artifact_MetaObject key.
            	FK_Artifact_MetaObject Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_objectID"></param>
            <param name="_objectMachine"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Artifact objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.GetByChildObjectIDChildObjectMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Artifact_MetaObject1 key.
            	FK_Artifact_MetaObject1 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_childObjectID"></param>
            <param name="_childObjectMachine"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Artifact objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.GetByArtifactObjectIDArtefactMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Artifact_MetaObject2 key.
            	FK_Artifact_MetaObject2 Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_artifactObjectID"></param>
            <param name="_artefactMachine"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Artifact objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.GetByArtifactID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Artifact index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_artifactID"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.Artifact"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.Artifact})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Artifact object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Artifact)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.Artifact object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Artifact object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Artifact object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlArtifactProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Artifact)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Artifact object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.Artifact object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Permission"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Permission"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Permission objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Permission objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Permission objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Permission objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.GetBypkid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Permission index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.Permission"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.Permission})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Permission object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Permission)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.Permission object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Permission object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Permission object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlPermissionProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Permission)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Permission object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.Permission object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.GraphFileObject"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.GraphFileObject"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_graphFileID">. Primary Key.</param>	
            <param name="_metaObjectID">. Primary Key.</param>	
            <param name="_machineID">. Primary Key.</param>	
            <param name="_graphFileMachine">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileObject objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileObject objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.GetByGraphFileIDGraphFileMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GraphFileObject_GraphFile key.
            	FK_GraphFileObject_GraphFile Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_graphFileID"></param>
            <param name="_graphFileMachine"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileObject objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.GetByMetaObjectIDMachineID(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_GraphFileObject_MetaObject key.
            	FK_GraphFileObject_MetaObject Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_metaObjectID"></param>
            <param name="_machineID"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.GraphFileObject objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.GetByGraphFileIDMetaObjectIDMachineIDGraphFileMachine(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_GraphFileObject index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_graphFileID"></param>
            <param name="_metaObjectID"></param>
            <param name="_machineID"></param>
            <param name="_graphFileMachine"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.GraphFileObject"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.GraphFileObject})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.GraphFileObject object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.GraphFileObject)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.GraphFileObject object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.GraphFileObject object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.GraphFileObject object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlGraphFileObjectProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.GraphFileObject)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.GraphFileObject object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.GraphFileObject object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Field"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:MetaBuilder.BusinessLogic.Field"/> entity.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.GetByObjectIDMachineIDFromObjectFieldValue(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Field objects from the datasource by ObjectID in the
            	ObjectFieldValue table. Table Field is related to table MetaObject
            	through the (M:N) relationship defined in the ObjectFieldValue table.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_objectID"></param>
            <param name="_machineID"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Field objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.Delete(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_pkid">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Field objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.Find(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.DataAccessLayer.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:MetaBuilder.DataAccessLayer.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Field objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.GetAll(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Field objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.GetPaged(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Field objects.</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.GetByClass(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Field_Class key.
            	FK_Field_Class Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_class"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of MetaBuilder.BusinessLogic.Field objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.GetBypkid(MetaBuilder.DataAccessLayer.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Field index.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="_pkid"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:MetaBuilder.BusinessLogic.Field"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.BulkInsert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.TList{MetaBuilder.BusinessLogic.Field})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Field object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.Insert(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Field)">
            <summary>
            	Inserts a MetaBuilder.BusinessLogic.Field object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Field object to insert.</param>
            <remarks>
            	After inserting into the datasource, the MetaBuilder.BusinessLogic.Field object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlFieldProviderBase.Update(MetaBuilder.DataAccessLayer.TransactionManager,MetaBuilder.BusinessLogic.Field)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> object</param>
            <param name="entity">MetaBuilder.BusinessLogic.Field object to update.</param>
            <remarks>
            	After updating the datasource, the MetaBuilder.BusinessLogic.Field object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider">
            <summary>
            This class is the Sql implementation of the NetTiersProvider.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider"/> class.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.CreateTransaction">
            <summary>
            Creates a new <c cref="T:MetaBuilder.DataAccessLayer.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.UseStoredProcedure">
            <summary>
            Gets a value indicating whether to use stored procedure or not.
            </summary>
            <value>
            	<c>true</c> if this repository use stored procedures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.IsTransactionSupported">
            <summary>
             Indicates if the current <c cref="T:MetaBuilder.DataAccessLayer.Bases.NetTiersProvider"/> implementation supports Transacton.
            </summary>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.VCStatusProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.VCStatus"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlVCStatusProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlVCStatusProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.DomainDefinitionPossibleValueProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.DomainDefinitionPossibleValue"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlDomainDefinitionPossibleValueProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlDomainDefinitionPossibleValueProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.WorkspaceProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.Workspace"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlWorkspaceProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlWorkspaceProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ClassTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.ClassType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlClassTypeProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlClassTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.WorkspaceTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.WorkspaceType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlWorkspaceTypeProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlWorkspaceTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.UserProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.User"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlUserProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlUserProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.GraphFileProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.GraphFile"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlGraphFileProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlGraphFileProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ClassProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.Class"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlClassProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlClassProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.MetaObjectProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.MetaObject"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMetaObjectProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMetaObjectProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.UserPermissionProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.UserPermission"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlUserPermissionProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlUserPermissionProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ConfigProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.Config"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlConfigProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlConfigProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.AssociationTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.AssociationType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlAssociationTypeProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlAssociationTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ClassAssociationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.ClassAssociation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlClassAssociationProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlClassAssociationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ObjectAssociationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.ObjectAssociation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlObjectAssociationProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlObjectAssociationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.FileTypeProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.FileType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlFileTypeProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlFileTypeProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ObjectFieldValueProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.ObjectFieldValue"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlObjectFieldValueProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlObjectFieldValueProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.GraphFileAssociationProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.GraphFileAssociation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlGraphFileAssociationProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlGraphFileAssociationProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.AllowedArtifactProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.AllowedArtifact"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlAllowedArtifactProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlAllowedArtifactProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.DomainDefinitionProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.DomainDefinition"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlDomainDefinitionProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlDomainDefinitionProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ArtifactProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.Artifact"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlArtifactProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlArtifactProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.PermissionProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.Permission"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlPermissionProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlPermissionProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.GraphFileObjectProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.GraphFileObject"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlGraphFileObjectProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlGraphFileObjectProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.FieldProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.Field"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlFieldProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlFieldProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.UURIProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.Field"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlUURIProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlFieldProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Activity_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Activity_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Activity_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Activity_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Activity_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Activity_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Activity_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Activity_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ApplicationInterface_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ApplicationInterface_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ApplicationInterface_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ApplicationInterface_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ApplicationInterface_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ApplicationInterface_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ApplicationInterface_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ApplicationInterface_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Assumption_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Assumption_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Assumption_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Assumption_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Assumption_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Assumption_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Assumption_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Assumption_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Attribute_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Attribute_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Attribute_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Attribute_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Attribute_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Attribute_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Attribute_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Attribute_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_BusinessCompetency_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_BusinessCompetency_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_BusinessCompetency_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_BusinessCompetency_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_BusinessCompetency_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_BusinessCompetency_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_BusinessCompetency_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_BusinessCompetency_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_BusinessInterface_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_BusinessInterface_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_BusinessInterface_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_BusinessInterface_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_BusinessInterface_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_BusinessInterface_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_BusinessInterface_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_BusinessInterface_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_CAD_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CAD_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CAD_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CAD_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_CAD_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CAD_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CAD_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CAD_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_CADReal_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CADReal_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CADReal_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CADReal_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_CADReal_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CADReal_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CADReal_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CADReal_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_CategoryFactor_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CategoryFactor_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CategoryFactor_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CategoryFactor_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_CategoryFactor_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CategoryFactor_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CategoryFactor_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CategoryFactor_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Channel_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Channel_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Channel_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Channel_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Channel_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Channel_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Channel_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Channel_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Competency_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Competency_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Competency_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Competency_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Competency_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Competency_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Competency_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Competency_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ComputingComponent_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ComputingComponent_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ComputingComponent_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ComputingComponent_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ComputingComponent_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ComputingComponent_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ComputingComponent_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ComputingComponent_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Condition_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Condition_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Condition_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Condition_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Condition_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Condition_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Condition_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Condition_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Conditional_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Conditional_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Conditional_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Conditional_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Conditional_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Conditional_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Conditional_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Conditional_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ConditionalDescription_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConditionalDescription_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConditionalDescription_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConditionalDescription_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ConditionalDescription_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConditionalDescription_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConditionalDescription_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConditionalDescription_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ConnectionSize_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionSize_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionSize_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionSize_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ConnectionSize_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionSize_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionSize_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionSize_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ConnectionSpeed_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionSpeed_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionSpeed_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionSpeed_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ConnectionSpeed_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionSpeed_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionSpeed_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionSpeed_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ConnectionType_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionType_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionType_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionType_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ConnectionType_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ConnectionType_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionType_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ConnectionType_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Constraint_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Constraint_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Constraint_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Constraint_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Constraint_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Constraint_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Constraint_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Constraint_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_CSF_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CSF_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CSF_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CSF_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_CSF_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_CSF_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CSF_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_CSF_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataAttribute_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataAttribute_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataAttribute_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataAttribute_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataAttribute_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataAttribute_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataAttribute_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataAttribute_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataColumn_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataColumn_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataColumn_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataColumn_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataColumn_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataColumn_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataColumn_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataColumn_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataDomain_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataDomain_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataDomain_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataDomain_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataDomain_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataDomain_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataDomain_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataDomain_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataEntity_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataEntity_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataEntity_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataEntity_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataEntity_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataEntity_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataEntity_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataEntity_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataField_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataField_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataField_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataField_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataField_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataField_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataField_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataField_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataFlowIndicator_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataFlowIndicator_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataFlowIndicator_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataFlowIndicator_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataFlowIndicator_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataFlowIndicator_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataFlowIndicator_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataFlowIndicator_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataSchema_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataSchema_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataSchema_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataSchema_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataSchema_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataSchema_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataSchema_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataSchema_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataSubjectArea_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataSubjectArea_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataSubjectArea_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataSubjectArea_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataSubjectArea_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataSubjectArea_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataSubjectArea_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataSubjectArea_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataTable_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataTable_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataTable_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataTable_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataTable_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataTable_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataTable_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataTable_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataValue_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataValue_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataValue_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataValue_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataValue_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataValue_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataValue_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataValue_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataView_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataView_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataView_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataView_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DataView_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DataView_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataView_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DataView_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DatedResponsibility_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DatedResponsibility_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DatedResponsibility_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DatedResponsibility_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DatedResponsibility_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DatedResponsibility_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DatedResponsibility_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DatedResponsibility_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DependencyDescription_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DependencyDescription_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DependencyDescription_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DependencyDescription_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_DependencyDescription_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_DependencyDescription_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DependencyDescription_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_DependencyDescription_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Driver_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Driver_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Driver_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Driver_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Driver_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Driver_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Driver_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Driver_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Employee_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Employee_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Employee_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Employee_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Employee_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Employee_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Employee_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Employee_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Entity_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Entity_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Entity_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Entity_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Entity_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Entity_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Entity_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Entity_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Environment_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Environment_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Environment_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Environment_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Environment_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Environment_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Environment_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Environment_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_EnvironmentCategory_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_EnvironmentCategory_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_EnvironmentCategory_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_EnvironmentCategory_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_EnvironmentCategory_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_EnvironmentCategory_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_EnvironmentCategory_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_EnvironmentCategory_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Event_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Event_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Event_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Event_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Event_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Event_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Event_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Event_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Exception_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Exception_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Exception_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Exception_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Exception_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Exception_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Exception_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Exception_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ExtractionRule_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ExtractionRule_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ExtractionRule_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ExtractionRule_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ExtractionRule_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ExtractionRule_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ExtractionRule_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ExtractionRule_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_FlowDescription_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_FlowDescription_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_FlowDescription_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_FlowDescription_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_FlowDescription_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_FlowDescription_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_FlowDescription_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_FlowDescription_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Function_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Function_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Function_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Function_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Function_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Function_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Function_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Function_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_FunctionalDependency_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_FunctionalDependency_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_FunctionalDependency_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_FunctionalDependency_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_FunctionalDependency_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_FunctionalDependency_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_FunctionalDependency_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_FunctionalDependency_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Gateway_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Gateway_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Gateway_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Gateway_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Gateway_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Gateway_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Gateway_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Gateway_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_GatewayDescription_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_GatewayDescription_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_GatewayDescription_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_GatewayDescription_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_GatewayDescription_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_GatewayDescription_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_GatewayDescription_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_GatewayDescription_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_GovernanceMechanism_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_GovernanceMechanism_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_GovernanceMechanism_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_GovernanceMechanism_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_GovernanceMechanism_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_GovernanceMechanism_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_GovernanceMechanism_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_GovernanceMechanism_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Implication_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Implication_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Implication_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Implication_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Implication_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Implication_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Implication_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Implication_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Iteration_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Iteration_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Iteration_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Iteration_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Iteration_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Iteration_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Iteration_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Iteration_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ITInfrastructureEnvironment_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ITInfrastructureEnvironment_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ITInfrastructureEnvironment_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ITInfrastructureEnvironment_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ITInfrastructureEnvironment_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ITInfrastructureEnvironment_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ITInfrastructureEnvironment_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ITInfrastructureEnvironment_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Job_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Job_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Job_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Job_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Job_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Job_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Job_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Job_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_JobCompetency_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_JobCompetency_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_JobCompetency_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_JobCompetency_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_JobCompetency_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_JobCompetency_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_JobCompetency_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_JobCompetency_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_JobPosition_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_JobPosition_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_JobPosition_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_JobPosition_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_JobPosition_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_JobPosition_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_JobPosition_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_JobPosition_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Location_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Location_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Location_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Location_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Location_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Location_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Location_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Location_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LocationAssociation_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationAssociation_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationAssociation_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationAssociation_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LocationAssociation_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationAssociation_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationAssociation_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationAssociation_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LocationScheme_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationScheme_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationScheme_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationScheme_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LocationScheme_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationScheme_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationScheme_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationScheme_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LocationUnit_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationUnit_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationUnit_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationUnit_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LocationUnit_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LocationUnit_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationUnit_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LocationUnit_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Logic_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Logic_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Logic_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Logic_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Logic_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Logic_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Logic_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Logic_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LogicalInformationArtefact_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalInformationArtefact_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalInformationArtefact_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalInformationArtefact_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LogicalInformationArtefact_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalInformationArtefact_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalInformationArtefact_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalInformationArtefact_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LogicalITInfrastructureComponent_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalITInfrastructureComponent_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalITInfrastructureComponent_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalITInfrastructureComponent_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LogicalITInfrastructureComponent_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalITInfrastructureComponent_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalITInfrastructureComponent_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LogicalSoftwareComponent_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalSoftwareComponent_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalSoftwareComponent_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalSoftwareComponent_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_LogicalSoftwareComponent_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_LogicalSoftwareComponent_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalSoftwareComponent_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_LogicalSoftwareComponent_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_MarketSegment_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MarketSegment_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MarketSegment_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MarketSegment_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_MarketSegment_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MarketSegment_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MarketSegment_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MarketSegment_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Measure_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Measure_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Measure_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Measure_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Measure_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Measure_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Measure_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Measure_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_MeasurementItem_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MeasurementItem_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MeasurementItem_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MeasurementItem_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_MeasurementItem_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MeasurementItem_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MeasurementItem_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MeasurementItem_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Model_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Model_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Model_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Model_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Model_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Model_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Model_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Model_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ModelReal_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ModelReal_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ModelReal_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ModelReal_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ModelReal_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ModelReal_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ModelReal_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ModelReal_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_MutuallyExclusiveIndicator_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MutuallyExclusiveIndicator_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MutuallyExclusiveIndicator_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MutuallyExclusiveIndicator_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_MutuallyExclusiveIndicator_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_MutuallyExclusiveIndicator_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_MutuallyExclusiveIndicator_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Network_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Network_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Network_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Network_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Network_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Network_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Network_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Network_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_NetworkComponent_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_NetworkComponent_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_NetworkComponent_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_NetworkComponent_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_NetworkComponent_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_NetworkComponent_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_NetworkComponent_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_NetworkComponent_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Object_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Object_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Object_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Object_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Object_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Object_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Object_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Object_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_OrganizationalUnit_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_OrganizationalUnit_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_OrganizationalUnit_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_OrganizationalUnit_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_OrganizationalUnit_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_OrganizationalUnit_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_OrganizationalUnit_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_OrganizationalUnit_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Peripheral_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Peripheral_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Peripheral_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Peripheral_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Peripheral_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Peripheral_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Peripheral_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Peripheral_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_PeripheralComponent_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PeripheralComponent_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PeripheralComponent_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PeripheralComponent_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_PeripheralComponent_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PeripheralComponent_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PeripheralComponent_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PeripheralComponent_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Person_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Person_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Person_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Person_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Person_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Person_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Person_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Person_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_PhysicalDataComponent_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalDataComponent_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalDataComponent_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalDataComponent_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_PhysicalDataComponent_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalDataComponent_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalDataComponent_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalDataComponent_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_PhysicalInformationArtefact_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalInformationArtefact_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalInformationArtefact_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalInformationArtefact_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_PhysicalInformationArtefact_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalInformationArtefact_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalInformationArtefact_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalInformationArtefact_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_PhysicalSoftwareComponent_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalSoftwareComponent_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalSoftwareComponent_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalSoftwareComponent_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_PhysicalSoftwareComponent_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PhysicalSoftwareComponent_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalSoftwareComponent_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PhysicalSoftwareComponent_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Position_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Position_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Position_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Position_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Position_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Position_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Position_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Position_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_PrimaryDataSourceIndicator_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PrimaryDataSourceIndicator_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PrimaryDataSourceIndicator_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PrimaryDataSourceIndicator_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_PrimaryDataSourceIndicator_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_PrimaryDataSourceIndicator_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_PrimaryDataSourceIndicator_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ProbabilityofRealization_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ProbabilityofRealization_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ProbabilityofRealization_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ProbabilityofRealization_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ProbabilityofRealization_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ProbabilityofRealization_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ProbabilityofRealization_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ProbabilityofRealization_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ProbOfRealization_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ProbOfRealization_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ProbOfRealization_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ProbOfRealization_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ProbOfRealization_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ProbOfRealization_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ProbOfRealization_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ProbOfRealization_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Process_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Process_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Process_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Process_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Process_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Process_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Process_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Process_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Rationale_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Rationale_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Rationale_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Rationale_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Rationale_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Rationale_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Rationale_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Rationale_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Report_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Report_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Report_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Report_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Report_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Report_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Report_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Report_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Resource_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Resource_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Resource_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Resource_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Resource_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Resource_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Resource_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Resource_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ResourceType_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ResourceType_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ResourceType_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ResourceType_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_ResourceType_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_ResourceType_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ResourceType_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_ResourceType_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Responsibility_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Responsibility_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Responsibility_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Responsibility_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Responsibility_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Responsibility_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Responsibility_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Responsibility_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Risk_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Risk_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Risk_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Risk_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Risk_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Risk_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Risk_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Risk_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Role_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Role_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Role_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Role_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Role_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Role_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Role_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Role_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Scenario_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Scenario_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Scenario_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Scenario_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Scenario_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Scenario_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Scenario_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Scenario_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_SecurityClassification_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SecurityClassification_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SecurityClassification_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SecurityClassification_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_SecurityClassification_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SecurityClassification_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SecurityClassification_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SecurityClassification_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_SelectorAttribute_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SelectorAttribute_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SelectorAttribute_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SelectorAttribute_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_SelectorAttribute_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SelectorAttribute_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SelectorAttribute_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SelectorAttribute_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Skill_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Skill_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Skill_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Skill_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Skill_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Skill_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Skill_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Skill_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Software_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Software_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Software_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Software_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Software_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Software_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Software_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Software_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Stakeholder_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Stakeholder_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Stakeholder_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Stakeholder_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Stakeholder_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Stakeholder_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Stakeholder_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Stakeholder_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_StatusIndicator_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StatusIndicator_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StatusIndicator_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StatusIndicator_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_StatusIndicator_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StatusIndicator_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StatusIndicator_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StatusIndicator_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_StorageComponent_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StorageComponent_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StorageComponent_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StorageComponent_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_StorageComponent_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StorageComponent_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StorageComponent_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StorageComponent_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_StrategicStatement_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StrategicStatement_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StrategicStatement_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StrategicStatement_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_StrategicStatement_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StrategicStatement_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StrategicStatement_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StrategicStatement_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_StrategicTheme_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StrategicTheme_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StrategicTheme_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StrategicTheme_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_StrategicTheme_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_StrategicTheme_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StrategicTheme_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_StrategicTheme_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_SubsetIndicator_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SubsetIndicator_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SubsetIndicator_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SubsetIndicator_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_SubsetIndicator_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SubsetIndicator_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SubsetIndicator_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SubsetIndicator_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Sys_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Sys_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Sys_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Sys_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Sys_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Sys_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Sys_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Sys_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_SystemComponent_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SystemComponent_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SystemComponent_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SystemComponent_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_SystemComponent_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_SystemComponent_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SystemComponent_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_SystemComponent_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Task_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Task_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Task_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Task_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_Task_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_Task_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Task_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_Task_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_TimeDifference_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeDifference_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeDifference_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeDifference_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_TimeDifference_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeDifference_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeDifference_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeDifference_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_TimeIndicator_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeIndicator_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeIndicator_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeIndicator_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_TimeIndicator_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeIndicator_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeIndicator_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeIndicator_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_TimeReference_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeReference_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeReference_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeReference_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_TimeReference_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeReference_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeReference_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeReference_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_TimeScheme_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeScheme_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeScheme_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeScheme_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_TimeScheme_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeScheme_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeScheme_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeScheme_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_TimeUnit_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeUnit_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeUnit_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeUnit_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_TimeUnit_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_TimeUnit_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeUnit_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_TimeUnit_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_WorkPackage_ListingProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_WorkPackage_Listing"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_WorkPackage_ListingProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_WorkPackage_ListingProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.METAView_WorkPackage_RetrievalProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.METAView_WorkPackage_Retrieval"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_WorkPackage_RetrievalProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.SqlMETAView_WorkPackage_RetrievalProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.vw_FieldValueProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:MetaBuilder.BusinessLogic.vw_FieldValue"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.Sqlvw_FieldValueProvider">
            <summary>
            Gets the current <c cref="P:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.Sqlvw_FieldValueProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(MetaBuilder.DataAccessLayer.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(MetaBuilder.DataAccessLayer.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteReader(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteReader(MetaBuilder.DataAccessLayer.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteReader(MetaBuilder.DataAccessLayer.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteDataSet(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteDataSet(MetaBuilder.DataAccessLayer.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteDataSet(MetaBuilder.DataAccessLayer.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteScalar(MetaBuilder.DataAccessLayer.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteScalar(MetaBuilder.DataAccessLayer.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider.ExecuteScalar(MetaBuilder.DataAccessLayer.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider">
            <summary>
            Summary description for Procedures.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider"/> instance.
            </summary>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider.Current">
            <summary>
            Gets the current <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider"/> singleton instance.
            </summary>
            <value><see cref="T:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider"/></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider.Procedures">
            <summary>
            Gets or sets the procedures.
            </summary>
            <value>An <see cref="T:System.Collections.ArrayList"/> of <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.Procedure"/> objects.</value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.Procedure"/> instance with the specified name.
            </summary>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.Procedure"/> instance at the specified index.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider.Serialize(System.String)">
            <summary>
            Serializes the specified filename.
            </summary>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider.Deserialize">
            <summary>
            Deserializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider.GetProcedureBodyFromEmbeddedResource(System.String)">
            <summary>
            Get the query text from the embedded xml file.
            </summary>
            <param name="name">The name of the query.</param>
            <returns>the text of the query</returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Boolean)">
            <summary>
            Get the command wrapper, either from the stored procedures or from the embedded queries.
            </summary>
            <param name="database">The database instance.</param>
            <param name="commandName">the name of the sp.</param>
            <param name="useStoredProcedure">Indicates if we want stored procedure.</param>
            <returns></returns>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Type,MetaBuilder.DataAccessLayer.SqlFilterParameterCollection,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the command wrapper for a dynamically generated query and
            optionally includes server-side paging.
            </summary>
            <param name="database"></param>
            <param name="commandName"></param>
            <param name="columnEnum"></param>
            <param name="parameters"></param>
            <param name="orderBy"></param>
            <param name="start"></param>
            <param name="pageLength"></param>
            <returns></returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.Procedure">
            <summary>
            Represents a sql query.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.Procedure.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.Procedure"/> instance.
            </summary>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Procedure.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Procedure.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Procedure.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Procedure.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Procedure.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value></value>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.Procedure.Parameter(System.String)">
            <summary>
            Get the parameter from the specified name of the param.
            </summary>
            <param name="paramName">Name of the param.</param>
            <returns></returns>
        </member>
        <member name="T:MetaBuilder.DataAccessLayer.SqlClient.Parameter">
            <summary>
            Respresents a query parameter.
            </summary>
        </member>
        <member name="M:MetaBuilder.DataAccessLayer.SqlClient.Parameter.#ctor">
            <summary>
            Creates a new <see cref="T:MetaBuilder.DataAccessLayer.SqlClient.Parameter"/> instance.
            </summary>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Parameter.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Parameter.SqlType">
            <summary>
            Gets or sets the SqlType.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Parameter.Direction">
            <summary>
            Gets or sets the Direction.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Parameter.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Parameter.Precision">
            <summary>
            Gets or sets the precision.
            </summary>
            <value></value>
        </member>
        <member name="P:MetaBuilder.DataAccessLayer.SqlClient.Parameter.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value></value>
        </member>
    </members>
</doc>
