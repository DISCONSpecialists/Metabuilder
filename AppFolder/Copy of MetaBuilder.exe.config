<configuration>
	<configSections>
			<section name="plugins" type="MetaBuilder.UIControls.GraphingUI.PluginSectionHandler, MetaBuilder.UIControls" />
			<section name="netTiersService" type="MetaBuilder.DataAccessLayer.Bases.NetTiersServiceSection, MetaBuilder.DataAccessLayer" allowDefinition="MachineToApplication" restartOnExternalChanges="true"/>
			<section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging" />
<section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings,Microsoft.Practices.EnterpriseLibrary.Caching" />
	</configSections>
	<plugins>
	<plugin type="DisconPlugins.Hierarchy.NumberingPlugin, DisconPlugins" />
    <plugin type="DisconPlugins.Hierarchy.RemoveNumberingPlugin, DisconPlugins" />
    <plugin type="DisconPlugins.Hierarchy.ImportToDiagramPlugin, DisconPlugins" />
	<!--plugin type="DisconPlugins.Hierarchy.ReplaceShapePlugin, DisconPlugins" /-->

  </plugins>
	<connectionStrings>
		<add name="netTiersConnectionString" connectionString="Server=.\SQLExpress;AttachDbFilename=C:\Program Files\DISCON Specialists\MetaBuilder\MetaData\MetaBuilder.mdf;Database=MetaBuilder;Trusted_Connection=Yes;"/>
    
	
	</connectionStrings>
		<loggingConfiguration tracingEnabled="true" defaultCategory="General">
		<logFilters>
			
			

		</logFilters>

		<categorySources>
			<add 
					  name="Data Access Events"
					  switchValue="All">
				<listeners>
					<add name="Flat File Destination" />
				</listeners>
			</add>

			<add 
					  name="General"
					  switchValue="All">
				<listeners>
          <add name="Flat File Destination" />
          <add name="Event Log Destination" />
					
				</listeners>
			</add>
			<add 
					  name="Troubleshooting"
					  switchValue="All">
				<listeners>
          <add name="Flat File Destination" />
          <add name="Event Log Destination" />
					
				</listeners>
			</add>
			<add 
					  name="UI Events"
					  switchValue="All">
				<listeners>
					<add name="Flat File Destination" />
				</listeners>
			</add>
			<add 
					  name="Trace"
					  switchValue="All">
				<listeners>
					<add name="Flat File Destination" />
				</listeners>
			</add>
		</categorySources>

		<specialSources>
			<errors name="errors" switchValue="All">
				<listeners>
					<add name="Event Log Destination" />
          <add name="Flat File Destination" />
				</listeners>
			</errors>
		</specialSources>

		<listeners>
			<add name="Event Log Destination" 
				type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" 
				source ="Logging Quick Start" 
				formatter="Text Formatter"
        machineName="."
				/>
			<add name="Flat File Destination" 
				type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" 
				fileName ="trace.log" 
				header="----------------header------------------------" 
				footer="----------------footer------------------------" 
				formatter="Text Formatter"
				/>
	
		</listeners>
		<formatters>
			<add
				name="Text Formatter"
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
				template="Timestamp: {timestamp}
Message: {message}
Category: {category}
Priority: {priority}
Title:{title}
Machine: {machine}
Application Domain: {appDomain}
"
				/>

			<!--add
	name="Text Formatter"
	type="Microsoft.Practices.EntearpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
	template="Timestamp: {timestamp}
Message: {message}
Category: {category}
Priority: {priority}
EventId: {eventid}
Severity: {severity}
Title:{title}
Machine: {machine}
Application Domain: {appDomain}
Process Id: {processId}
Process Name: {processName}
Win32 Thread Id: {win32ThreadId}
Thread Name: {threadName}
Extended Properties: {dictionary({key} : {value}
)}"
				/-->
		</formatters>
	</loggingConfiguration>



<appSettings>
	<add key="MetaDepth" value="20" />
	<add key="ReportFolder" value="d:\\My Documents\\development\\projects\\metabuilder\\winui\\reports\\" />
  <!-- target database -->
</appSettings>
	<system.windows.forms jitDebugging="true" />
	<netTiersService defaultProvider="SqlNetTiersProvider">
		<providers>
			<!--
    *** SqlClient Provider ***
    	connectionStringName: sqlclient connection string to the db
    	useStoredProcedure: if trueindicates that we use the stored procedures, otherwise, we use parametrized queries that are embedded.
    -->
			<add name="SqlNetTiersProvider" type="MetaBuilder.DataAccessLayer.SqlClient.SqlNetTiersProvider, MetaBuilder.DataAccessLayer.SqlClient" connectionStringName="netTiersConnectionString" useStoredProcedure="true" providerInvariantName="System.Data.SqlClient"/>
		</providers>
	</netTiersService>
  <cachingConfiguration defaultCacheManager="Default Cache Manager">
    <backingStores>
      <add name="inMemory"
				type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching" />
    </backingStores>

    <cacheManagers>
      <add name="Default Cache Manager"
				expirationPollFrequencyInSeconds="60"
				maximumElementsInCacheBeforeScavenging="1000"
				numberToRemoveWhenScavenging="10"
				backingStoreName="inMemory" />
 
      <add name="DataRetrievalCacheManager"
				expirationPollFrequencyInSeconds="60"
				maximumElementsInCacheBeforeScavenging="10"
				numberToRemoveWhenScavenging="5"
				backingStoreName="inMemory" />
    </cacheManagers>
  </cachingConfiguration>
</configuration>

